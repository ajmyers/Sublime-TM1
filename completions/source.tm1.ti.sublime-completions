{
    "scope": "source.tm1.ti",
    "completions": [
        {
            "trigger": "ASCIIDELETE",
            "annotation": "ASCIIDelete(FileName);",
            "contents": "ASCIIDELETE(${1:sFile});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_tifun_asciidelete.html\">Documentation</a> ASCIIDelete deletes an ASCII file.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "ASCIIOUTPUT",
            "annotation": "ASCIIOutput(FileName, String1, String2, ...Stringn);",
            "contents": "ASCIIOUTPUT(${1:sFile}, ${2:sString1}, ${3:sString2}, ${4:sStringN});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_asciioutput.html\">Documentation</a> ASCIIOutput writes a comma-delimited record to an ASCII file. \nThis function is valid in TM1 TurboIntegrator processes\nonly.\nThe ASCII file is opened when the first record is written, and is closed when the TurboIntegrator\nprocedure (Prolog, Metadata, Data, or Epilog) containing the ASCIIIOutput function finishes\nprocessing. \nEach output record generated by ASCIIOutput is limited to 8000 bytes. If an output record exceeds\n8000 bytes, the record is truncated and a warning is logged in the TM1ProcessError.log file. \nWhen ASCIIOutput encounters a String argument that pushes the output record beyond the 8000 byte\nlimit, it ignores that argument and any further arguments. For example, if there are 10 String\narguments and output for the first seven arguments total 7950 bytes while the output for the eighth\nargument is 51 bytes, only the output for the first seven arguments will be written to the record.\nIf there are ten String arguments and the first argument is over 8000 bytes, no output will be\nwritten to the record.\nIf you use the ASCIIOutput function to write to the same file in multiple procedures (tabs) of a\nTurboIntegrator process, the file will be overwritten each time it is opened for a new\nprocedure.\nThe ASCIIOutput function generates a minor error if an error occurs while writing the ASCII file.\nIn addition, the function returns a value upon execution: 1 if the function successfully writes the\nASCII file and 0 on failure.\nNote: The error will be generated and the value returned only when ASCIIOutput is writing to a disk\nother than the one that the server is running on. For example, if the server is running on the C:\ndrive and ASCIIOutput is writing to the F: drive, and the F: drive runs out of space, the error will\nbe trapped and the server remains alive. If the server is running on the C: drive while ASCIIOutput\nis also writing to the C: drive, and that drive runs out of space, the server will terminate (as\nexpected).\nNote: The ability to execute the ASCIIOutput function when the data source is a cube view is\ndetermined by the Allow Export as Text capability assignment, which is set\nper user group. If a user is a member of a group which is denied the ability to export data as text,\nany attempt by the user to execute ASCIIOutput results in the process exiting with a permission\nerror. The process message log indicates Execution was aborted. No security access for\nASCIIOutput.\nFor details on how the Allow Export as Text capability is set, see\nCapability Assignments in TM1 Operations.\n\nNote:  The ASCIIOutput function places the 0x1A hexadecimal character at the end of all generated\nfiles. However, TM1 Web cannot open a Websheet that contains\nthe 0x1A hexadecimal character.\nIf you use ASCIIOutput to export TM1 data to an ASCII file\nand then attempt to open the file in a TM1 Websheet, you will\nencounter the following error.\nError occurred while converting the MS Excel workbook into XML format, hexadecimal value 0x1A is\nan invalid character.\nIf you remove the 0x1A hexadecimal character from the Websheet, the file will open in TM1 Web."
        },
        {
            "trigger": "NUMBERTOSTRING",
            "annotation": "NumberToString(Value);",
            "contents": "NUMBERTOSTRING(${1:sValue});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_numbertostring.html\">Documentation</a> NumberToString converts a number to a string, using the decimal separator for the current\nuser locale.\nThis function is valid in TM1 TurboIntegrator processes\nonly.\nIn Microsoft Windows, the decimal separator is a\nRegional Options setting.\nThe output of this function is similar to the 'general' number format; it does not use thousands\nseparators and uses the minus sign (-) to denote negative numbers."
        },
        {
            "trigger": "NUMBERTOSTRINGEX",
            "annotation": "NumberToStringEx(Value, NumericFormat, DecimalSep, ThousandsSep);",
            "contents": "NUMBERTOSTRINGEX(${1:sValue}, ${2:NumericFormat}, ${3:sSep}, ${4:sSep});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_numbertostringex.html\">Documentation</a> NumberToStringEx converts a number to a string, using the passed string format, decimal\nseparator, and thousands separator.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "SETINPUTCHARACTERSET",
            "annotation": "SetInputCharacterSet(CharacterSet);",
            "contents": "SETINPUTCHARACTERSET(${1:sCharSet});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_setinputcharacterset.html\">Documentation</a> SetInputCharacterSet function lets you specify the character set used in a\nTurboIntegrator data source.\nThis function is valid in TM1 TurboIntegrator processes\nonly.\nWhen a TurboIntegrator process reads an external file as input, it needs to know the character\nset in which that external file was written. If the file contains a valid byte-order-mark, TM1 functions will correctly convert the file to UTF-8 if\nrequired. \nFor formats lacking a valid byte-order-mark, the characters must be converted from some other\nencoding to UTF-8. If the proper converters are present on the machine hosting the server, the input\nfile will be converted to the Unicode character set required by TM1."
        },
        {
            "trigger": "SETOUTPUTCHARACTERSET",
            "annotation": "SetOutputCharacterSet(FileName, CharacterSet);",
            "contents": "SETOUTPUTCHARACTERSET(${1:sFile}, ${2:sCharSet});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_setoutputcharacterset.html\">Documentation</a> SetOutputCharacterSet lets you specify the character set to be used when writing to a\ntext file using TextOutput in a TurboIntegrator proces.\nThis function is valid in TM1 TurboIntegrator processes\nonly.\nThe function with the TextOutput function.\nUsed withTextOutputs."
        },
        {
            "trigger": "SETOUTPUTESCAPEDOUBLEQUOTE",
            "annotation": "SetOutputEscapeDoubleQuote(FileName, Num);",
            "contents": "SETOUTPUTESCAPEDOUBLEQUOTE(${1:sFile}, ${2:Num});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_setoutputescapedoublequote.html\">Documentation</a> SetOutputEscapeDoubleQuote allows you to escape double quotes that appear in element\nnames or data values when exporting a cube view to a .csv file.\nThis function is valid in TM1 TurboIntegrator processes\nonly.\nWhen SetOutputEscapeDoubleQuote is included in your TurboIntegrator script and set to 1, the\nexported file retains the double quote positions as they appear in your source cube view by escaping\neach double quote within another pair of double quotes. For example, if an element in your source\nview is named \"Region\", the element is exported as \"\"\"Region\"\"\" in the .csv output file.\nWhen SetOutputEscapeDoubleQuote is not included in your TurboIntegrator script or is set\nto 0, the exported file does not escape any double quotes that appear in your source cube. \nSetOutputEscapeDoubleQuote is used in conjunction with the ASCIIOutput function, which is the\nfunction that actually writes the output file. SetOutputEscapeDoubleQuote should precede ASCIIOutput\nin your TurboIntegrator script, and both functions should use the same FileName parameter value."
        },
        {
            "trigger": "STRINGTONUMBER",
            "annotation": "StringToNumber(String);",
            "contents": "STRINGTONUMBER(${1:sString});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_stringtonumber.html\">Documentation</a> StringToNumber converts a string to a number, using the decimal separator for the current\nuser locale. If the input string is an invalid number string, the value returned will be an invalid\nfloating point value. In Microsoft Windows, the decimal\nseparator is a Regional Options setting.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "STRINGTONUMBEREX",
            "annotation": "StringToNumberEx(String, DecimalSep, ThousandsSep);",
            "contents": "STRINGTONUMBEREX(${1:sString}, ${2:sSep}, ${3:sSep});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_stringtonumberex.html\">Documentation</a> StringToNumberEx converts a string to a number, using the passed decimal separator and\nthousands separator. If the input string is an invalid number string, the value returned will be an\ninvalid floating point value.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "TEXTOUTPUT",
            "annotation": "TextOutput(FileName, String1, String2, ...Stringn);",
            "contents": "TEXTOUTPUT(${1:sFile}, ${2:sString1}, ${3:sString2}, ${4:sStringN});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_textoutput.html\">Documentation</a> TextOutput writes a comma-delimited record to a text file. \nThis function is valid in TM1 TurboIntegrator processes\nonly.\nBy default TextOutput writes characters in the locale character set of the server machine. To\ncreate a file in a different character set, call the function SetOutputCharacterSet before calling TextOutput.\nThe text file is opened when the first record is written, and is closed when the TurboIntegrator\nprocedure (Prolog, Metadata, Data, or Epilog) containing the TextOutput function finishes\nprocessing. \nIf you use the TextOutput function to write to the same file in multiple procedures (tabs) of a\nTurboIntegrator process, the file will be overwritten each time it is opened for a new\nprocedure.\nEach output record generated by TextOutput is limited to 8000 bytes. If an output record exceeds\n8000 bytes, the record is truncated and a warning is logged in the TM1ProcessError.log file. \nWhen TextOutput encounters a String argument that pushes the output record beyond the 8000 byte\nlimit, it ignores that argument and any further arguments. For example, if there are 10 String\narguments and output for the first seven arguments total 7950 bytes while the output for the eighth\nargument is 51 bytes, only the output for the first seven arguments will be written to the record.\nIf there are ten String arguments and the first argument is over 8000 bytes, no output will be\nwritten to the record.\nThe TextOutput function generates a minor error if an error occurs while writing the text file.\nIn addition, the function returns a value upon execution: 1 if the function successfully writes the\ntext file and 0 on failure.\nThe error will be generated and the value returned only when TextOutput is writing to a disk\nother than the one that the server is running on. For example, if the server is running on the C:\ndrive and TextOutput is writing to the F: drive, and the F: drive runs out of space, the error will\nbe trapped and the server remains alive. If the server is running on the C: drive while TextOutput\nis also writing to the C: drive, and that drive runs out of space, the server will terminate (as\nexpected).\nNote: The ability to execute the TextOutput function when the data source is a cube view is\ndetermined by the Allow Export as Text capability assignment, which is set\nper user group. If a user is a member of a group which is denied the ability to export data as text,\nany attempt by the user to execute TextOutput results in the process exiting with a permission\nerror. The process message log indicates Execution was aborted. No security access for\nTextOutput.\nFor details on how the Allow Export as Text capability is set, see\nCapability Assignments in the IBM Cognos TM1 Operations\ndocumentation."
        },
        {
            "trigger": "ATTRNL",
            "annotation": "ATTRNL(DimName, ElName, AttrName, [LangLocaleCode]);",
            "contents": "ATTRNL(${1:sDim}, ${2:sEle}, ${3:sAttr}, ${4:sLocale});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/t_ref_ti_func_attrnl.html\">Documentation</a> ATTRNL returns a numeric attribute for a specified element of a dimension.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "ATTRSL",
            "annotation": "AttrSL(DimName, ElName, AttrName, [LangLocaleCode]);",
            "contents": "ATTRSL(${1:sDim}, ${2:sEle}, ${3:sAttr}, ${4:sLocale});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_rule_ti_func_attrsl.html\">Documentation</a> AttrSL returns a string attribute for a specified element of a dimension.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "ATTRDELETE",
            "annotation": "AttrDelete(DimName, AttrName);",
            "contents": "ATTRDELETE(${1:sDim}, ${2:sAttr});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_attrdelete.html\">Documentation</a> AttrDelete deletes an element attribute from the TM1 database.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "ATTRINSERT",
            "annotation": "AttrInsert(DimName, PrevAttr, AttrName, Type);",
            "contents": "ATTRINSERT(${1:sDim}, ${2:sAttrPrev}, ${3:sAttr}, ${4:sAttrType});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_attrinsert.html\">Documentation</a> AttrInsert creates a new element attribute for a dimension. The function can create a\nstring, numeric, or alias attribute. \nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "ATTRPUTN",
            "annotation": "AttrPutN(Value, DimName, ElName, AttrName, [LangLocaleCode]);",
            "contents": "ATTRPUTN(${1:sValue}, ${2:sDim}, ${3:sEle}, ${4:sAttr}, ${5:sLocale});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_attrputn.html\">Documentation</a> AttrPutN assigns a value to a numeric element attribute.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "ATTRPUTS",
            "annotation": "AttrPutS(Value, DimName, ElName, AttrName, [LangLocaleCode]);",
            "contents": "ATTRPUTS(${1:sValue}, ${2:sDim}, ${3:sEle}, ${4:sAttr}, ${5:sLocale});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_attrputs.html\">Documentation</a> AttrPutS assigns a value to a string element attribute.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "CHOREATTRDELETE",
            "annotation": "ChoreAttrDelete(AttrName);",
            "contents": "CHOREATTRDELETE(${1:sAttr});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_ti_func_choreattrdelete.html\">Documentation</a> ChoreAttrDelete deletes a chore attribute from the TM1 database.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "CHOREATTRINSERT",
            "annotation": "ChoreAttrInsert(PrevAttrName, NewAttrName, AttrType);",
            "contents": "CHOREATTRINSERT(${1:sAttrPref}, ${2:sAttr}, ${3:sAttrType});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_ti_func_choreattrinsert.html\">Documentation</a> ChoreAttrInsert creates a new attribute for chores on your TM1 server. The function can create a string, numeric, or alias attribute. \nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "CHOREATTRN",
            "annotation": "ChoreAttrN(ChoreName, AttrName);",
            "contents": "CHOREATTRN(${1:sChore}, ${2:sAttr});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_ti_func_choreattrn.html\">Documentation</a> ChoreAttrN returns a numeric attribute for a specified chore.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "CHOREATTRNL",
            "annotation": "ChoreAttrNL(ChoreName, AttrName, [LangLocaleCode]);",
            "contents": "CHOREATTRNL(${1:sChore}, ${2:sAttr}, ${3:sLocale});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_ti_func_choreattrnl.html\">Documentation</a> ChoreAttrNL returns an attribute's numeric value for a specified chore with respect to a\ngiven locale.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "CHOREATTRPUTN",
            "annotation": "ChoreAttrPutN(NumericValue, ChoreName, AttrName, [LangLocaleCode]);",
            "contents": "CHOREATTRPUTN(${1:NumericValue}, ${2:sChore}, ${3:sAttr}, ${4:sLocale});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_ti_func_choreattrputn.html\">Documentation</a> ChoreAttrPutN assigns a value to a numeric chore attribute.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "CHOREATTRPUTS",
            "annotation": "ChoreAttrPutS(String, ChoreName, AttrName, [LangLocaleCode]);",
            "contents": "CHOREATTRPUTS(${1:sString}, ${2:sChore}, ${3:sAttr}, ${4:sLocale});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_ti_func_choreattrputs.html\">Documentation</a> ChoreAttrPutS assigns a value to a string chore attribute.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "CHOREATTRS",
            "annotation": "ChoreAttrS(ChoreName, AttrName);",
            "contents": "CHOREATTRS(${1:sChore}, ${2:sAttr});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_ti_func_choreattrs.html\">Documentation</a> ChoreAttrS returns a string attribute for a specified chore.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "CHOREATTRSL",
            "annotation": "ChoreAttrSL(ChoreName, AttrName, [LangLocaleCode]);",
            "contents": "CHOREATTRSL(${1:sChore}, ${2:sAttr}, ${3:sLocale});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_ti_func_choreattrsl.html\">Documentation</a> ChoreAttrSL returns a string attribute value for a specified chore with respect to a\ngiven locale.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "CUBEATTRDELETE",
            "annotation": "CubeAttrDelete(AttrName);",
            "contents": "CUBEATTRDELETE(${1:sAttr});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_ti_func_cubeattrdelete.html\">Documentation</a> CubeAttrDelete deletes a cube attribute from the TM1 database.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "CUBEATTRINSERT",
            "annotation": "CubeAttrInsert(PrevAttrName, NewAttrName, AttrType);",
            "contents": "CUBEATTRINSERT(${1:sAttrPref}, ${2:sAttr}, ${3:sAttrType});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_ti_func_cubeattrinsert.html\">Documentation</a> CubeAttrInsert creates a new attribute for cubes on your TM1 server. The function can create a string, numeric, or alias attribute. \nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "CUBEATTRPUTN",
            "annotation": "CubeAttrPutN(NumericValue, CubeName, AttrName, [LangLocaleCode]);",
            "contents": "CUBEATTRPUTN(${1:NumericValue}, ${2:sCube}, ${3:sAttr}, ${4:sLocale});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_ti_func_cubeattrputn.html\">Documentation</a> CubeAttrPutN assigns a value to a numeric cube attribute.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "CUBEATTRPUTS",
            "annotation": "CubeAttrPutS(String, CubeName, AttrName, [LangLocaleCode]);",
            "contents": "CUBEATTRPUTS(${1:sString}, ${2:sCube}, ${3:sAttr}, ${4:sLocale});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_ti_func_cubeattrputs.html\">Documentation</a> CubeAttrPutS assigns a value to a string cube attribute.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "CUBEATTRNL",
            "annotation": "CubeATTRNL(CubeName, AttrName, [LangLocaleCode]);",
            "contents": "CUBEATTRNL(${1:sCube}, ${2:sAttr}, ${3:sLocale});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ti_rule_func_cubeattrnl.html\">Documentation</a> CubeATTRNL returns a numeric attribute value for a specified cube with respect to a given\nlocale.\nThis function is valid in TM1 TurboIntegrator\nprocesses."
        },
        {
            "trigger": "CUBEATTRSL",
            "annotation": "CubeATTRSL(CubeName, AttrName, [LangLocaleCode]);",
            "contents": "CUBEATTRSL(${1:sCube}, ${2:sAttr}, ${3:sLocale});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ti_tunc_cubeattrsl.html\">Documentation</a> CubeATTRSL returns a string attribute value for a specified cube with respect to a given\nlocale.\nThis function is valid in TM1 TurboIntegrator\nprocesses."
        },
        {
            "trigger": "DIMENSIONATTRDELETE",
            "annotation": "DimensionAttrDelete(AttrName);",
            "contents": "DIMENSIONATTRDELETE(${1:sAttr});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_ti_func_dimensionattrdelete.html\">Documentation</a> DimensionAttrDelete deletes a dimension attribute from the TM1 database.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "DIMENSIONATTRINSERT",
            "annotation": "DimensionAttrInsert(PrevAttrName, NewAttrName, AttrType);",
            "contents": "DIMENSIONATTRINSERT(${1:sAttrPref}, ${2:sAttr}, ${3:sAttrType});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_ti_func_dimensionattrinsert.html\">Documentation</a> DimensionAttrInsert creates a new attribute for dimensions on your TM1 server. The function can create a string, numeric, or alias attribute. \nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "DIMENSIONATTRPUTN",
            "annotation": "DimensionAttrPutN(NumericValue, DimensionName, AttrName, [LocalLangCode]);",
            "contents": "DIMENSIONATTRPUTN(${1:NumericValue}, ${2:sDim}, ${3:sAttr}, ${4:sLocale});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_ti_func_dimensionattrputn.html\">Documentation</a> DimensionAttrPutN assigns a value to a numeric dimension attribute.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "DIMENSIONATTRPUTS",
            "annotation": "DimensionAttrPutS(String, DimensionName, AttrName, [LangLocaleCode]);",
            "contents": "DIMENSIONATTRPUTS(${1:sString}, ${2:sDim}, ${3:sAttr}, ${4:sLocale});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_ti_func_dimensionattrputs.html\">Documentation</a> DimensionAttrPutS assigns a value to a string dimension attribute.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "DIMENSIONATTRNL",
            "annotation": "DimensionATTRNL(DimName, AttrName, [LangLocaleCode]);",
            "contents": "DIMENSIONATTRNL(${1:sDim}, ${2:sAttr}, ${3:sLocale});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ti_func_dimensionattrnl.html\">Documentation</a> DimensionATTRNL returns a numeric attribute value for a specified dimension with respect\nto a given locale.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "DIMENSIONATTRSL",
            "annotation": "DimensionATTRSL(DimName, AttrName, [LangLocaleCode]);",
            "contents": "DIMENSIONATTRSL(${1:sDim}, ${2:sAttr}, ${3:sLocale});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ti_func_dimensionattrnsl.html\">Documentation</a> DimensionATTRSL returns a string attribute value for a specified dimension with respect\nto a given locale.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "ELEMENTATTRNL",
            "annotation": "ElementATTRNL(DimName, HierName, ElName, AttrName, [LangLocaleCode]);",
            "contents": "ELEMENTATTRNL(${1:sDim}, ${2:sHier}, ${3:sEle}, ${4:sAttr}, ${5:sLocale});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/t_ref_ti_func_elementattrnl.html\">Documentation</a> ElementATTRNL returns a numeric attribute for a specified element of a\ndimension.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "ELEMENTATTRSL",
            "annotation": "ElementATTRSL(DimName, HierName, ElName, AttrName, [LangLocaleCode]);",
            "contents": "ELEMENTATTRSL(${1:sDim}, ${2:sHier}, ${3:sEle}, ${4:sAttr}, ${5:sLocale});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_rule_ti_func_elementattrsl.html\">Documentation</a> ElementATTRSL returns a string attribute for a specified element of a\ndimension.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "ELEMENTATTRPUTN",
            "annotation": "ElementAttrPutN(Value, DimName, HierName, ElName, AttrName, [LangLocaleCode]);",
            "contents": "ELEMENTATTRPUTN(${1:sValue}, ${2:sDim}, ${3:sHier}, ${4:sEle}, ${5:sAttr}, ${6:sLocale});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_elementattrputn.html\">Documentation</a> ElementAttrPutN assigns a value to a numeric element attribute.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "ELEMENTATTRPUTS",
            "annotation": "ElementAttrPutS(Value, DimName, HierName, ElName, AttrName, [LangLocaleCode]);",
            "contents": "ELEMENTATTRPUTS(${1:sValue}, ${2:sDim}, ${3:sHier}, ${4:sEle}, ${5:sAttr}, ${6:sLocale});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_elementattrputs.html\">Documentation</a> ElementAttrPutS assigns a value to a string element attribute.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "ELEMENTATTRINSERT",
            "annotation": "ElementAttrInsert(DimName, HierName, PrevAttr, AttrName, Type);",
            "contents": "ELEMENTATTRINSERT(${1:sDim}, ${2:sHier}, ${3:sAttrPrev}, ${4:sAttr}, ${5:sAttrType});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_elementattrinsert.html\">Documentation</a> ElementAttrInsert creates a new element attribute for a dimension. The function can\ncreate a string, numeric, or alias attribute. \nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "ELEMENTATTRDELETE",
            "annotation": "ElementAttrDelete(DimName, HierName, AttrName);",
            "contents": "ELEMENTATTRDELETE(${1:sDim}, ${2:sHier}, ${3:sAttr});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_elementattrdelete.html\">Documentation</a> ElementAttrDelete deletes an element attribute from the TM1 database.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "HIERARCHYATTRPUTN",
            "annotation": "HierarchyAttrPutN(NumericValue, DimensionName, HierName, AttrName, [LocalLangCode]);",
            "contents": "HIERARCHYATTRPUTN(${1:NumericValue}, ${2:sDim}, ${3:sHier}, ${4:sAttr}, ${5:sLocale});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_ti_func_hierarchyattrputn.html\">Documentation</a> HierarchyAttrPutN assigns a value to a numeric attribute in a specified hierarchy within\na dimension.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "HIERARCHYATTRPUTS",
            "annotation": "HierarchyAttrPutS(String, DimensionName, HierName, AttrName, [LangLocaleCode]);",
            "contents": "HIERARCHYATTRPUTS(${1:sString}, ${2:sDim}, ${3:sHier}, ${4:sAttr}, ${5:sLocale});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_ti_func_hierarchyattrputs.html\">Documentation</a> HierarchyAttrPutS assigns a value to a string attribute in a specified hierarchy within a\ndimension.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "HIERARCHYATTRN",
            "annotation": "HierarchyATTRN(DimName, HierName, AttrName);",
            "contents": "HIERARCHYATTRN(${1:sDim}, ${2:sHier}, ${3:sAttr});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/t_tm1_ti_rules_func_hierarchyattrn.html\">Documentation</a> HierarchyATTRN returns a numeric attribute for a specified hierarchy within a\ndimension.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "HIERARCHYATTRS",
            "annotation": "HierarchyATTRS(DimName, AttrName);",
            "contents": "HIERARCHYATTRS(${1:sDim}, ${2:sAttr});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/t_tm1_ti_rules_func_hierarchyattrs.html\">Documentation</a> HierarchyATTRS returns a string attribute for a specified hierarchy within a\ndimension.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "HIERARCHYATTRNL",
            "annotation": "HierarchyATTRNL(DimName, HierName, AttrName, [LangLocaleCode]);",
            "contents": "HIERARCHYATTRNL(${1:sDim}, ${2:sHier}, ${3:sAttr}, ${4:sLocale});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ti_func_hierarchyattrnl.html\">Documentation</a> HierarchyATTRNL returns a numeric attribute value for a specified hierarchy within a\ndimension with respect to a given locale.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "HIERARCHYATTRSL",
            "annotation": "HierarchyATTRSL(DimName, HierName, AttrName, [LangLocaleCode]);",
            "contents": "HIERARCHYATTRSL(${1:sDim}, ${2:sHier}, ${3:sAttr}, ${4:sLocale});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ti_func_hierarchyattrsl.html\">Documentation</a> HierarchyATTRSL returns a string attribute value for a specified hierarchy within a\ndimension with respect to a given locale.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "HIERARCHYSUBSETATTRS",
            "annotation": "HierarchySubsetATTRS(DimName, HierName, SubName, AttrName);",
            "contents": "HIERARCHYSUBSETATTRS(${1:sDim}, ${2:sHier}, ${3:sSub}, ${4:sAttr});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_ti_func_hierarchysubsetattrs.html\">Documentation</a> HierarchySubsetATTRS returns a string attribute for a specified subset associated with a\nhierarchy in a dimension.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "HIERARCHYSUBSETATTRN",
            "annotation": "HierarchySubsetATTRN(DimName, HierName, SubName, AttrName);",
            "contents": "HIERARCHYSUBSETATTRN(${1:sDim}, ${2:sHier}, ${3:sSub}, ${4:sAttr});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_ti_func_hierarchysubsetattrn.html\">Documentation</a> HierarchySubsetATTRN returns a numeric attribute for a specified subset associated with a\nhierarchy in a dimension.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "HIERARCHYSUBSETATTRSL",
            "annotation": "HierarchySubsetATTRSL(DimName, HierName, SubName, AttrName, [LangLocaleCode]);",
            "contents": "HIERARCHYSUBSETATTRSL(${1:sDim}, ${2:sHier}, ${3:sSub}, ${4:sAttr}, ${5:sLocale});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_ti_func_hierarchysubsetattrsl.html\">Documentation</a> HierarchySubsetATTRSL returns an attribute's string value for a specified subset (and\nlocale) associated with a hierarchy in a dimension.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "HIERARCHYSUBSETATTRNL",
            "annotation": "HierarchySubsetATTRNL(DimName, HierName, SubName, AttrName, [LangLocaleCode]);",
            "contents": "HIERARCHYSUBSETATTRNL(${1:sDim}, ${2:sHier}, ${3:sSub}, ${4:sAttr}, ${5:sLocale});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_ti_func_hierarchysubsetattrnl.html\">Documentation</a> HierarchySubsetATTRNL returns an attribute's numeric value for a specified subset (and\nlocale) associated with a hierarchy in a dimension.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "HIERARCHYSUBSETATTRPUTS",
            "annotation": "HierarchySubsetAttrPutS(String, DimName, HierName, SubName, AttrName, [LangLocaleCode]);",
            "contents": "HIERARCHYSUBSETATTRPUTS(${1:sString}, ${2:sDim}, ${3:sHier}, ${4:sSub}, ${5:sAttr}, ${6:sLocale});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_ti_func_hierarchysubsetattrputs.html\">Documentation</a> HierarchySubsetAttrPutS assigns a string value to an attribute for a specified subset\nassociated with a hierarchy in a dimension.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "HIERARCHYSUBSETATTRPUTN",
            "annotation": "HierarchySubsetAttrPutN(NumericValue, DimName, HierName, SubName, AttrName, [LocalLangCode]);",
            "contents": "HIERARCHYSUBSETATTRPUTN(${1:NumericValue}, ${2:sDim}, ${3:sHier}, ${4:sSub}, ${5:sAttr}, ${6:sLocale});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_ti_func_hierarchysubsetattrputn.html\">Documentation</a> HierarchySubsetAttrPutN assigns a numeric value to an attribute for a specified subset\nassociated with a hierarchy in a dimension.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "HIERARCHYSUBSETATTRINSERT",
            "annotation": "HierarchySubsetAttrInsert(Dimension, Hierarchy, PrevAttrName, NewAttrName, AttrType);",
            "contents": "HIERARCHYSUBSETATTRINSERT(${1:sDim}, ${2:sHier}, ${3:sAttrPref}, ${4:sAttr}, ${5:sAttrType});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_ti_func_hierarchysubsetattrinsert.html\">Documentation</a> HierarchySubsetAttrInsert creates a new attribute for subsets on your TM1 server. The function creates a string, numeric, or alias attribute. \nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "HIERARCHYSUBSETATTRDELETE",
            "annotation": "HierarchySubsetAttrDelete(Dimension, Hierarchy, AttrName);",
            "contents": "HIERARCHYSUBSETATTRDELETE(${1:sDim}, ${2:sHier}, ${3:sAttr});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_ti_func_hierarchysubsetattrdelete.html\">Documentation</a> HierarchySubsetAttrDelete deletes a subset attribute from the TM1 database.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "PROCESSATTRDELETE",
            "annotation": "ProcessAttrDelete(AttrName);",
            "contents": "PROCESSATTRDELETE(${1:sAttr});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_ti_func_processattrdelete.html\">Documentation</a> ProcessAttrDelete deletes a process attribute from the TM1 database.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "PROCESSATTRINSERT",
            "annotation": "ProcessAttrInsert(PrevAttrName, NewAttrName, AttrType);",
            "contents": "PROCESSATTRINSERT(${1:sAttrPref}, ${2:sAttr}, ${3:sAttrType});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_ti_func_processattrinsert.html\">Documentation</a> ProcessAttrInsert creates a new attribute for processes on your TM1 server. The function can create a string, numeric, or alias attribute. \nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "PROCESSATTRN",
            "annotation": "ProcessAttrN(ProcessName, AttrName);",
            "contents": "PROCESSATTRN(${1:sProcess}, ${2:sAttr});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_ti_func_processattrn.html\">Documentation</a> ProcessAttrN returns a numeric attribute for a specified process.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "PROCESSATTRNL",
            "annotation": "ProcessAttrNL(ProcessName, AttrName, [LangLocaleCode]);",
            "contents": "PROCESSATTRNL(${1:sProcess}, ${2:sAttr}, ${3:sLocale});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_ti_func_processattrnl.html\">Documentation</a> ProcessAttrNL returns an attribute's numeric value for a specified process with respect\nto a given locale.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "PROCESSATTRPUTN",
            "annotation": "ProcessAttrPutN(NumericValue, CubeName, AttrName, [LangLocaleCode]);",
            "contents": "PROCESSATTRPUTN(${1:NumericValue}, ${2:sCube}, ${3:sAttr}, ${4:sLocale});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_ti_func_processattrputn.html\">Documentation</a> ProcessAttrPutN assigns a value to a numeric process attribute.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "PROCESSATTRPUTS",
            "annotation": "ProcessAttrPutS(String, ProcessName, AttrName, [LangLocaleCode]);",
            "contents": "PROCESSATTRPUTS(${1:sString}, ${2:sProcess}, ${3:sAttr}, ${4:sLocale});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_ti_func_processattrputs.html\">Documentation</a> ProcessAttrPutS assigns a value to a string process attribute.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "PROCESSATTRS",
            "annotation": "ProcessAttrS(ProcessName, AttrName);",
            "contents": "PROCESSATTRS(${1:sProcess}, ${2:sAttr});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_ti_func_processattrs.html\">Documentation</a> ProcessAttrS returns a string attribute for a specified process.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "PROCESSATTRSL",
            "annotation": "ProcessAttrSL(ProcessName, AttrName, [LangLocaleCode]);",
            "contents": "PROCESSATTRSL(${1:sProcess}, ${2:sAttr}, ${3:sLocale});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_ti_func_processattrsl.html\">Documentation</a> ProcessAttrSL returns a string attribute value for a specified process with respect to a\ngiven locale.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "SUBSETATTRS",
            "annotation": "SubsetATTRS(DimName, SubName, AttrName);",
            "contents": "SUBSETATTRS(${1:sDim}, ${2:sSub}, ${3:sAttr});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_ti_func_subsetattrs.html\">Documentation</a> SubsetATTRS returns a string attribute for a specified subset.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "SUBSETATTRN",
            "annotation": "SubsetATTRN(DimName, SubName, AttrName);",
            "contents": "SUBSETATTRN(${1:sDim}, ${2:sSub}, ${3:sAttr});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_ti_func_subsetattrn.html\">Documentation</a> SubsetATTRN returns a numeric attribute for a specified subset.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "SUBSETATTRSL",
            "annotation": "SubsetATTRSL(DimName, SubName, AttrName, [LangLocaleCode]);",
            "contents": "SUBSETATTRSL(${1:sDim}, ${2:sSub}, ${3:sAttr}, ${4:sLocale});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_ti_func_subsetattrsl.html\">Documentation</a> SubsetATTRSL returns an attribute's string value for a specified subset with respect to a\ngiven locale.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "SUBSETATTRNL",
            "annotation": "SubsetATTRNL(DimName, SubName, AttrName, [LangLocaleCode]);",
            "contents": "SUBSETATTRNL(${1:sDim}, ${2:sSub}, ${3:sAttr}, ${4:sLocale});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_ti_func_subsetattrnl.html\">Documentation</a> SubsetATTRNL returns an attribute's numeric value for a specified subset with respect to\na given locale.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "SUBSETATTRPUTS",
            "annotation": "SubsetAttrPutS(String, DimensionName, SubName, AttrName, [LangLocaleCode]);",
            "contents": "SUBSETATTRPUTS(${1:sString}, ${2:sDim}, ${3:sSub}, ${4:sAttr}, ${5:sLocale});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_ti_func_subsetattrputs.html\">Documentation</a> SubsetAttrPutS assigns a string value to an attribute for a specified subset.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "SUBSETATTRPUTN",
            "annotation": "SubsetAttrPutN(NumericValue, DimensionName, SubName, AttrName, [LocalLangCode]);",
            "contents": "SUBSETATTRPUTN(${1:NumericValue}, ${2:sDim}, ${3:sSub}, ${4:sAttr}, ${5:sLocale});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_ti_func_subsetattrputn.html\">Documentation</a> SubsetAttrPutN assigns a numeric value to an attribute for a specified\nsubset.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "SUBSETATTRINSERT",
            "annotation": "SubsetAttrInsert(Dimension, PrevAttrName, NewAttrName, AttrType);",
            "contents": "SUBSETATTRINSERT(${1:sDim}, ${2:sAttrPref}, ${3:sAttr}, ${4:sAttrType});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_ti_func_subsetattrinsert.html\">Documentation</a> SubsetAttrInsert creates a new attribute for subsets on your TM1 server. The function creates a string, numeric, or alias attribute. \nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "SUBSETATTRDELETE",
            "annotation": "SubsetAttrDelete(Dimension, AttrName);",
            "contents": "SUBSETATTRDELETE(${1:sDim}, ${2:sAttr});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_ti_func_subsetattrdelete.html\">Documentation</a> SubsetAttrDelete deletes a subset attribute from the TM1 database.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "VIEWATTRDELETE",
            "annotation": "ViewAttrDelete(CubeName, AttrName);",
            "contents": "VIEWATTRDELETE(${1:sCube}, ${2:sAttr});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_ti_func_viewattrdelete.html\">Documentation</a> ViewAttrDelete deletes a view attribute for a specific cube from the TM1 database.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "VIEWATTRINSERT",
            "annotation": "ViewAttrInsert(CubeName, PrevAttrName, NewAttrName, AttrType);",
            "contents": "VIEWATTRINSERT(${1:sCube}, ${2:sAttrPref}, ${3:sAttr}, ${4:sAttrType});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_ti_func_viewattrinsert.html\">Documentation</a> ViewAttrInsert creates a new attribute for views of a specific cube on your TM1 server. The function can create a string, numeric, or alias\nattribute. \nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "VIEWATTRN",
            "annotation": "ViewAttrN(CubeName, ViewName, AttrName);",
            "contents": "VIEWATTRN(${1:sCube}, ${2:sView}, ${3:sAttr});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_ti_func_viewattrn.html\">Documentation</a> ViewAttrN returns a numeric attribute for a specified view.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "VIEWATTRNL",
            "annotation": "ViewAttrNL(CubeName, ViewName, AttrName, [LangLocaleCode]);",
            "contents": "VIEWATTRNL(${1:sCube}, ${2:sView}, ${3:sAttr}, ${4:sLocale});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_ti_func_viewattrnl.html\">Documentation</a> ViewAttrNL returns an attribute's numeric value for a specified view with respect to a\ngiven locale.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "VIEWATTRPUTN",
            "annotation": "ViewAttrPutN(NumericValue, CubeName, ViewName, AttrName, [LangLocaleCode]);",
            "contents": "VIEWATTRPUTN(${1:NumericValue}, ${2:sCube}, ${3:sView}, ${4:sAttr}, ${5:sLocale});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_ti_func_viewattrputn.html\">Documentation</a> ViewAttrPutN assigns a value to a numeric view attribute.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "VIEWATTRPUTS",
            "annotation": "ViewAttrPutS(String, CubeName, ViewName, AttrName, [LangLocaleCode]);",
            "contents": "VIEWATTRPUTS(${1:sString}, ${2:sCube}, ${3:sView}, ${4:sAttr}, ${5:sLocale});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_ti_func_viewattrputs.html\">Documentation</a> ViewAttrPutS assigns a string value to an attribute for a specified view.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "VIEWATTRS",
            "annotation": "ViewAttrS(CubeName, ViewName, AttrName);",
            "contents": "VIEWATTRS(${1:sCube}, ${2:sView}, ${3:sAttr});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_ti_func_viewattrs.html\">Documentation</a> ViewAttrS returns a string attribute for a specified view.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "VIEWATTRSL",
            "annotation": "ViewAttrSL(CubeName, ViewName, AttrName, [LangLocaleCode]);",
            "contents": "VIEWATTRSL(${1:sCube}, ${2:sView}, ${3:sAttr}, ${4:sLocale});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_ti_func_viewattrsl.html\">Documentation</a> ViewAttrSL returns an attribute's string value for a specified view with respect to a\ngiven locale.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "CHOREERROR",
            "annotation": "ChoreError;",
            "contents": "CHOREERROR();",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ti_func_choreerror.html\">Documentation</a> ChoreError causes the immediate termination of a chore. It can be called from any process\nwithin a chore. The ChoreError TurboIntegrator function causes an immediate\ntermination of a single chore. Chores terminated with this function are flagged with an error\nstatus.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "CHOREQUIT",
            "annotation": "ChoreQuit;",
            "contents": "CHOREQUIT();",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_chorequit.html\">Documentation</a> ChoreQuit causes the immediate termination of a chore. It can be called from any process\nwithin a chore. The current chore is terminated with an error status, and a message\nis written to the server log file indicating that ChoreQuit was called to terminate the\nchore.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "CHOREROLLBACK",
            "annotation": "ChoreRollback;",
            "contents": "CHOREROLLBACK();",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_chorerollback.html\">Documentation</a> ChoreRollback initiates a chore rollback. When used inside a\nTurboIntegrator process, this function throws out all pending edits and cancels further processing.\nAn error message appears in the tm1server.log and tm1processorerrorXXX.log files.\nWhen used in a single-commit mode chore, ChoreRollback throws out all\npending edits from all previous processes and chore execution stops with an error code. When used in\na multi-commit mode chore, ChoreRollback throws out all pending edits from\nthe current processes and chore execution stops with an error code. Changes that have already been\ncommitted cannot be rolled back.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "SETCHOREVERBOSEMESSAGES",
            "annotation": "SetChoreVerboseMessages(Flag);",
            "contents": "SETCHOREVERBOSEMESSAGES(${1:nFlag});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_setchoreverbosemessages.html\">Documentation</a> SetChoreVerboseMessages is used to turn on (or off) more verbose reporting of messages to\nthe Tm1s.log file. You can use this function to debug chores in which several processes call each\nother with the ExecuteProcess function.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "ADDCUBEDEPENDENCY",
            "annotation": "AddCubeDependency(BaseCube, DependentCube);",
            "contents": "ADDCUBEDEPENDENCY(${1:sCube}, ${2:sCubeDep});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_addcubedependency_41410.html\">Documentation</a> AddCubeDependency lets you predefine cube inter-dependencies to avoid lock contention\nproblems during normal system use.\nIn normal operations, cube dependencies are established when data which crosses cube boundaries\n(such as data that is derived by a rule that references an external cube) is retrieved. To create\nthe dependency information, the server must lock the cubes while the dependency is established,\npotentially maintaining the lock during a long view calculation. Since this is a 'write' lock, other\nusers are prevented from accessing the cubes. The AddCubeDependency function allows the dependency\nto be established when the server starts up, preventing later lock contention as no new dependency\nneed be established.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "CELLGETN",
            "annotation": "CellGetN(Cube, e1, e2[, ...en]);",
            "contents": "CELLGETN(${1:sCube}, ${2:sEle1}, ${3:sEle2}, ${4:sEleN});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_cellgetn.html\">Documentation</a> CellGetN retrieves a value from a numeric cube cell.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "CELLGETS",
            "annotation": "CellGetS(Cube, e1, e2[, ...en]);",
            "contents": "CELLGETS(${1:sCube}, ${2:sEle1}, ${3:sEle2}, ${4:sEleN});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_cellgets.html\">Documentation</a> CellGetS retrieves a value from a string cube cell.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "CELLINCREMENTN",
            "annotation": "CellIncrementN(x, Cube, e1, e2[, ...en]);",
            "contents": "CELLINCREMENTN(${1:nValue}, ${2:sCube}, ${3:sEle1}, ${4:sEle2}, ${5:sEleN});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_cellincrementn.html\">Documentation</a> CellIncrementN increments an existing numeric cell value by a specified\nvalue.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "CELLISUPDATEABLE",
            "annotation": "CellIsUpdateable(Cube, e1, e2[, ...en]);",
            "contents": "CELLISUPDATEABLE(${1:sCube}, ${2:sEle1}, ${3:sEle2}, ${4:sEleN});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_cellsupdateable.html\">Documentation</a> CellIsUpdateable determines whether a cube cell can be written to. The function returns 1\nif the cell can be written to, otherwise it returns 0.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "CELLPUTN",
            "annotation": "CellPutN(x, Cube, e1, e2[, ..., en]);",
            "contents": "CELLPUTN(${1:nValue}, ${2:sCube}, ${3:sEle1}, ${4:sEle2}, ${5:...}, ${6:sEleN});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_cellputn.html\">Documentation</a> CellPutN sends a numeric value to a cube cell.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "CELLPUTPROPORTIONALSPREAD",
            "annotation": "CellPutProportionalSpread(value, cube, e1, e2, e3..., en);",
            "contents": "CELLPUTPROPORTIONALSPREAD(${1:sValue}, ${2:sCube}, ${3:sEle1}, ${4:sEle2}, ${5:sEle3}, ${6:sEleN});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_cellputproportionalspread.html\">Documentation</a> CellPutProportionalSpread distributes a specified value to the leaves of a consolidation\nproportional to existing cell values. CellPutProportionalSpread replaces existing cell values; it\ncannot be used to add to or subtract from existing cell values. \nThe function is analogous to the Proportional Spread data spreading method, which is described in\ndetail in the TM1 Perspectives and TM1 Architect documentation. If you must add to or\nsubtract from existing cell values, use the Proportional Spread method, which can be executed\nthrough the user interface or through data spreading syntax.\nNote: When using CellPutProportionalSpread to distribute a value to the leaves of a consolidation,\nonly those leaves already containing non-zero values are changed. This is because zero values cannot\nbe incremented or decremented proportionally; any proportion of zero is still zero.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "CELLPUTS",
            "annotation": "CellPutS(String, Cube, e1, e2[, ...en]);",
            "contents": "CELLPUTS(${1:sString}, ${2:sCube}, ${3:sEle1}, ${4:sEle2}, ${5:sEleN});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_cellputs.html\">Documentation</a> CellPutS sends a string value to a cube cell.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "CUBECLEARDATA",
            "annotation": "CubeClearData(name-of-cube-as-string);",
            "contents": "CUBECLEARDATA(${1:sCube});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_cubecleardata_nc78211.html\">Documentation</a> CubeClearData clears all of the data in a cube. This function is much faster than doing\nan operation such as creating a view to cover the entire cube, and then doing a ViewZeroOut() to\nzero out the entire cube.\nWhen you use CubeClearData to clear data from a cube, any cells in the cube that are fed with\nfeeders are also cleared. You must resave the rule that establishes the feeders or use the\nCubeProcessFeeders function to restore the fed cells.\nThis function is valid in TM1 TurboIntegrator processes\nonly.\nNote: This call just deletes the cube data, it does not delete and re-create the cube\nitself. This has implications when sandboxes are used. If a cube is deleted and then re-created any\nsandboxes a user may have will be discarded, since the cube against which those sandboxes were\ncreated was deleted (even though a cube may have been re-created with the same name). If however the\nCubeClearData() call is used, the sandbox data will still be considered valid, since the cube\nagainst which the sandbox was created continues to exist."
        },
        {
            "trigger": "CUBECREATE",
            "annotation": "CubeCreate(Cube, d1, d2[, ...dn]);",
            "contents": "CUBECREATE(${1:sCube}, ${2:sDim1}, ${3:sDim2}, ${4:sDimN});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_cubecreate.html\">Documentation</a> CubeCreate creates a cube from specified dimensions. The order of dimensions specified in\nthe function will be the order of dimensions in the cube definition. After execution, CubeCreate\nautomatically saves the resulting .cub file to disk.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "CUBEDESTROY",
            "annotation": "CubeDestroy(Cube);",
            "contents": "CUBEDESTROY(${1:sCube});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_cubedestroy.html\">Documentation</a> CubeDestroy deletes a specified TM1\ncube.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "CUBEDIMENSIONCOUNTGET",
            "annotation": "CubeDimensionCountGet(CubeName);",
            "contents": "CUBEDIMENSIONCOUNTGET(${1:sCube});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ti_func_cubedimensioncountget.html\">Documentation</a> "
        },
        {
            "trigger": "CUBEEXISTS",
            "annotation": "CubeExists(CubeName);",
            "contents": "CUBEEXISTS(${1:sCube});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_cubeexists.html\">Documentation</a> CubeExists determines whether a specific cube exists on the server from which a\nTurboIntegrator process is executed. The function returns 1 if the cube exists on the server,\notherwise it returns 0.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "CUBEGETLOGCHANGES",
            "annotation": "CubeGetLogChanges(CubeName);",
            "contents": "CUBEGETLOGCHANGES(${1:sCube});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_cubegetlogchanges.html\">Documentation</a> CubeGetLogChanges returns the Boolean value of the Logging property for a specified cube. \nThe Logging property is set in the TM1 Security Assignments\ndialog box and stored in the }CubeProperties control cube. If Logging is turned on for a cube, the\nfunction returns 1. If logging is turned off the function returns 0.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "CUBESAVEDATA",
            "annotation": "CubeSaveData(Cube);",
            "contents": "CUBESAVEDATA(${1:sCube});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_cubesavedata.html\">Documentation</a> CubeSaveData() serializes a cube.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "CUBESETCONNPARAMS",
            "annotation": "CubeSetConnParams(cubeName, providerName, dataSourceLocation, dataSourceName, dataSourceCatalog, userID, password, sapClientID, sapClientLang, providerString);",
            "contents": "CUBESETCONNPARAMS(${1:cubeName}, ${2:providerName}, ${3:dataSourceLocation}, ${4:dataSourceName}, ${5:dataSourceCatalog}, ${6:userID}, ${7:password}, ${8:sapClientID}, ${9:sapClientLang}, ${10:providerString});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_id_addcubedependency_41410_1250cubesetconnparams.html\">Documentation</a> CubeSetConnParams is used to encrypt the password for a virtual cube in the\n}CubeProperties cube.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "CUBESETLOGCHANGES",
            "annotation": "CubeSetLogChanges(Cube, LogChanges);",
            "contents": "CUBESETLOGCHANGES(${1:sCube}, ${2:nLogChanges});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_cubesetlogchanges.html\">Documentation</a> CubeSetLogChanges sets the Logging property for a cube.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "CUBETIMELASTUPDATED",
            "annotation": "CubeTimeLastUpdated(cube);",
            "contents": "CUBETIMELASTUPDATED(${1:sCube});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ti_func_cubetimelastupdated.html\">Documentation</a> CubeTimeLastUpdated returns a serial value that indicates the date and time at which a\nspecified cube was last updated.\nThe serial value that is returned by this function uses a starting time of Jan 1 1900 12:00:00\nA.M., which is equivalent to the value 1.0. Dates are represented by integers, while times are\nrepresented as decimal numbers between .0 and .999999. This is consistent with the way date and time\nserial values are stored and reported in Microsoft\nExcel.\nNote: By default, TM1 date and time serial values use a\nstarting time of Jan 1 1960 12:00:00 A.M. To resolve the inconsistency between Excel and TM1 date\nand time serial values, you can set UseExcelSerialDate=T in your Tm1s.cfg file\nto instruct the TM1 server to use date and time serial values that conform to Excel\nstandards.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "CUBEUNLOAD",
            "annotation": "CubeUnload(CubeName);",
            "contents": "CUBEUNLOAD(${1:sCube});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_cubeunload.html\">Documentation</a> CubeUnload unloads a specified cube, along with all associated cube views, from memory. \nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "CUBEDATARESERVATIONACQUIRE",
            "annotation": "CubeDataReservationAcquire(Cube, User, bForce, Address, [AddressDelimiter])",
            "contents": "CUBEDATARESERVATIONACQUIRE(${1:sCube}, ${2:sUser}, ${3:nForce}, ${4:sAddress}, ${5:sDelimiter})",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/c_tm1_dev_dr_cubedatareservationacquire.html\">Documentation</a> CubeDataReservationAcquire acquires a Data Reservation for the specified cube, user and\ntuple.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "CUBEDATARESERVATIONRELEASE",
            "annotation": "CubeDataReservationRelease(Cube, User, Address, [AddressDelimiter])",
            "contents": "CUBEDATARESERVATIONRELEASE(${1:sCube}, ${2:sUser}, ${3:sAddress}, ${4:sDelimiter})",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/c_tm1_dev_dr_cubedatareservationrelease.html\">Documentation</a> CubeDataReservationRelease releases the specified Data Reservation.\nIf the user specified is not the same as the owner of the reservation, then the release will only\nsucceed if the user specified has the DataReservationOverride capability enabled.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "CUBEDATARESERVATIONRELEASEALL",
            "annotation": "CubeDataReservationReleaseAll(Cube, UserFilter, Address, [AddressDelimiter])",
            "contents": "CUBEDATARESERVATIONRELEASEALL(${1:sCube}, ${2:sFilter}, ${3:sAddress}, ${4:sDelimiter})",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/c_tm1_dev_dr_cubedatareservationreleaseall.html\">Documentation</a> CubeDataReservationReleaseAll releases multiple existing Data Reservations.\nAll reservations fully contained by the specified address that match the user filter will be\nreleased. A blank user filter means all users.\nIf the user filter specified is not the same as the user running the TurboIntegrator proces, then\nthe DataReservationOverride capability must be enabled.\nUsing a blank user filter and all wildcards in the address field releases all reservations.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "CUBEDATARESERVATIONGET",
            "annotation": "CubeDataReservationGet(Index, Cube, User, [AddressDelimiter])returnsAddress;",
            "contents": "CUBEDATARESERVATIONGET(${1:nIndex}, ${2:sCube}, ${3:sUser}, ${4:sDelimiter});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/c_tm1_dev_dr_cubedatareservationget.html\">Documentation</a> CubeDataReservationGet finds existing reservations on a specific cube for all or one\nuser.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "CUBEDATARESERVATIONGETCONFLICTS",
            "annotation": "CubeDataReservationGetConflicts(Index, Cube, User, Address, [AddressDelimiter])returnsConflictAddress;",
            "contents": "CUBEDATARESERVATIONGETCONFLICTS(${1:nIndex}, ${2:sCube}, ${3:sUser}, ${4:sAddress}, ${5:sDelimiter});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/c_tm1_dev_dr_cubedatareservationgetconflicts.html\">Documentation</a> CubeDataReservationGetConflicts finds existing reservations on a specific cube that would\nconflict with the specified user, address and tuple.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "CUBEDRACQUIRE",
            "annotation": "CubeDRAcquire(Cube, User, bForce, Element-list)",
            "contents": "CUBEDRACQUIRE(${1:sCube}, ${2:sUser}, ${3:nForce}, ${4:sList})",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/c_tm1_dev_dr_cubedracquire.html\">Documentation</a> CubeDRAcquire acquires a Data Reservation for the specified cube, user and tuple. While\nthe CubeDataReservationAcquire applies to dimensions with a single hierarchy, this function applies\nto dimensions with one or more hierarchies.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "CUBEDRRELEASE",
            "annotation": "CubeDRRelease(Cube, User, Element-list)",
            "contents": "CUBEDRRELEASE(${1:sCube}, ${2:sUser}, ${3:sList})",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/c_tm1_dev_dr_cubedrrelease.html\">Documentation</a> CubeDRRelease releases the specified Data Reservation. While the\nCubeDataReservationRelease applies to dimensions with a single hierarchy, this function applies to\ndimensions with one or more hierarchies.\nIf the user specified is not the same as the owner of the reservation, then the release will only\nsucceed if the user specified has the DataReservationOverride capability enabled.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "CUBEDRRELEASEALL",
            "annotation": "CubeDRReleaseAll(Cube, UserFilter, Element-list)",
            "contents": "CUBEDRRELEASEALL(${1:sCube}, ${2:sFilter}, ${3:sList})",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/c_tm1_dev_dr_cubedrreleaseall.html\">Documentation</a> CubeDRReleaseAll releases multiple existing Data Reservations. While the\nCubeDataReservationReleaseAll applies to dimensions with a single hierarchy, this function applies\nto dimensions with one or more hierarchies.\nAll reservations fully contained by the specified address that match the user filter will be\nreleased. A blank user filter means all users.\nIf the user filter specified is not the same as the user running the TurboIntegrator proces, then\nthe DataReservationOverride capability must be enabled.\nUsing a blank user filter and all wildcards in the address field releases all reservations.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "CUBEDRGET",
            "annotation": "CubeDRGet(Index, Cube, User, Element-list)returnsAddress;",
            "contents": "CUBEDRGET(${1:nIndex}, ${2:sCube}, ${3:sUser}, ${4:sList});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/c_tm1_dev_dr_cubedrget.html\">Documentation</a> CubeDRGet finds existing reservations on a specific cube for all or one user. While the\nCubeDataReservationGet applies to dimensions with a single hierarchy, this function applies to\ndimensions with one or more hierarchies.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "CUBEDRGETCONFLICTS",
            "annotation": "CubeDRGetConflicts(Index, Cube, User, Element-list)returnsConflictAddress;",
            "contents": "CUBEDRGETCONFLICTS(${1:nIndex}, ${2:sCube}, ${3:sUser}, ${4:sList});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/c_tm1_dev_dr_cubedrgetconflicts.html\">Documentation</a> CubeDRGetConflicts finds existing reservations on a specific cube that would conflict\nwith the specified user. While the CubeDataReservationGetConflicts applies to dimensions with a\nsingle hierarchy, this function applies to dimensions with one or more hierarchies.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "FORMATDATE",
            "annotation": "FormatDate(Date, <Pattern>, <Index>)",
            "contents": "FORMATDATE(${1:nDate}, ${2:sPattern}, ${3:nIndex})",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_formatdate.html\">Documentation</a> FormatDate formats a date value according to a formatter defined with the\nNewDateFormatter function.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "NEWDATEFORMATTER",
            "annotation": "NewDateFormatter(Locale, <TimeZone>, <UseUNIXTime>, <FormatterStyle>, <FormatterType>, <TimeType>)",
            "contents": "NEWDATEFORMATTER(${1:sLocale}, ${2:sTimeZone}, ${3:nUseUnixTime}, ${4:sFormatterStyle}, ${5:sFormatterType}, ${6:sTimeType})",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_newdateformatter.html\">Documentation</a> NewDateFormatter defines a date formatter. It returns an index for use in the ParseDate\nand FormatDate functions. The indices start at 0 and go up by one for each call to NewDateFormat.\nDate formatters are valid during execution of the process.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "PARSEDATE",
            "annotation": "ParseDate(DateString, <Pattern>, <Index>)",
            "contents": "PARSEDATE(${1:sDate}, ${2:sPattern}, ${3:nIndex})",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_parsedate.html\">Documentation</a> ParseDate parses a date string according to a formatter defined with the NewDateFormatter\nfunction.\nA date value that is either serial or UNIX, depending on the formatter specified, is returned. If\nthe date cannot be parsed then an undefined value is returned. This can be tested with the ISUND\nfunction.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "DIMENSIONCREATE",
            "annotation": "DimensionCreate(DimName);",
            "contents": "DIMENSIONCREATE(${1:sDim});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_dimensioncreate.html\">Documentation</a> DimensionCreate creates a new dimension.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "DIMENSIONDELETEALLELEMENTS",
            "annotation": "DimensionDeleteAllElements(DimName);",
            "contents": "DIMENSIONDELETEALLELEMENTS(${1:sDim});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_dimensiondeleteallelements.html\">Documentation</a> DimensionDeleteAllElements deletes all the elements in a dimension. This function is\nuseful for recreating dimension hierarchies.\nNote: Deleting an element deletes all cube data identified by that element. However, if you use\nDimensionDeleteAllElements to delete elements, then recreate those elements with the same names in\nthe Metadata tab, any data points in a cube identified by the elements will be retained after\nrebuilding the dimension.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "DIMENSIONDELETEELEMENTS",
            "annotation": "DimensionDeleteElements(DimensionName, Subset)",
            "contents": "DIMENSIONDELETEELEMENTS(${1:sDim}, ${2:sSub})",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_dimensiondeleteelements.html\">Documentation</a> DimensionDeleteElements deletes all elements from a dimension using the subset of\nelements. All elements in the referenced subset are deleted, including C level elements.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "DIMENSIONDESTROY",
            "annotation": "DimensionDestroy(DimName);",
            "contents": "DIMENSIONDESTROY(${1:sDim});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_dimensiondestroy.html\">Documentation</a> DimensionDestroy deletes a dimension from the TM1\ndatabase.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "DIMENSIONELEMENTCOMPONENTADD",
            "annotation": "DimensionElementComponentAdd(DimName, ConsolidatedElName, ElName, ElWeight);",
            "contents": "DIMENSIONELEMENTCOMPONENTADD(${1:sDim}, ${2:sElePar}, ${3:sEle}, ${4:nWeight});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_dimensionelementcomponentadd.html\">Documentation</a> DimensionElementComponentAdd adds a component (child) to a consolidated element. You\ncan't use this function in the Epilog procedure of a TurboIntegrator process.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "DIMENSIONELEMENTCOMPONENTADDDIRECT",
            "annotation": "DimensionElementComponentAddDirect(DimName, ConsolidatedElName, ElName, ElWeight);",
            "contents": "DIMENSIONELEMENTCOMPONENTADDDIRECT(${1:sDim}, ${2:sElePar}, ${3:sEle}, ${4:nWeight});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_dimensionelementcomponentadddirect.html\">Documentation</a> DimensionElementComponentAddDirect adds a component (child) to a consolidated element by\ndirectly editing a dimension.\nThis function is valid in TM1 TurboIntegrator processes\nonly.\nThe default means of editing a dimension in TM1 is to use a\nwhole-copy editing pattern. In that pattern, an editing copy of the dimension is created, edits are\napplied to the editing copy, then finally the actual dimension is rewritten using the editing copy\nas a template. TurboIntegrator supports whole-copy editing automatically whenever dimension editing\nTurboIntegrator functions (like DimensionElementComponentAdd) are used in the Metadata procedure of\nthe process. TurboIntegrator automatically creates the editing copy and applies editing operations\nto it, then rewrites the actual dimension at the end of the Metadata procedure. \n Direct edits are different in that no editing copy is involved. Instead, the operations are\nperformed directly on the actual dimension. There are two different, specialized use cases for which\nthis type of direct editing is intended:\n\nWhen the purpose of the TurboIntegrator process is to make a small change to a large dimension.\nIn this case, direct editing will be more efficient because it avoids copying and completely\nrewriting the large dimension.\nWhen the purpose of the TurboIntegrator process is to load large volumes of data into a cube. In\nthis case the process' Metadata procedure is deliberately kept empty, and any element modification\nneeded to support data loading is performed using direct calls in the Data procedure. When the\nMetadata procedure is empty, the process skips an entire iteration over the external datasource,\nwhich can result in faster data loads."
        },
        {
            "trigger": "DIMENSIONELEMENTCOMPONENTDELETE",
            "annotation": "DimensionElementComponentDelete(DimName, ConsolidatedElName, ElName);",
            "contents": "DIMENSIONELEMENTCOMPONENTDELETE(${1:sDim}, ${2:sElePar}, ${3:sEle});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_dimensionelementcomponentdelete.html\">Documentation</a> DimensionElementComponentDelete deletes a component (child) from a consolidated\nelement.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "DIMENSIONELEMENTCOMPONENTDELETEDIRECT",
            "annotation": "DimensionElementComponentDeleteDirect(DimName, ConsolidatedElName, ElName);",
            "contents": "DIMENSIONELEMENTCOMPONENTDELETEDIRECT(${1:sDim}, ${2:sElePar}, ${3:sEle});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_dimensionelementcomponentdeletedirect.html\">Documentation</a> DimensionElementComponentDeleteDirect deletes a component (child) from a consolidated\nelement by directly editing the dimension.\nThis function is valid in TM1 TurboIntegrator processes\nonly.\nThe default means of editing a dimension in TM1 is to use a\nwhole-copy editing pattern. In that pattern, an editing copy of the dimension is created, edits are\napplied to the editing copy, then finally the actual dimension is rewritten using the editing copy\nas a template. TurboIntegrator supports whole-copy editing automatically whenever dimension editing\nTurboIntegrator functions (like DimensionElementComponentDelete) are used in the Metadata procedure\nof the process. TurboIntegrator automatically creates the editing copy and applies editing\noperations to it, then rewrites the actual dimension at the end of the Metadata procedure. \n Direct edits are different in that no editing copy is involved. Instead, the operations are\nperformed directly on the actual dimension. There are two different, specialized use cases for which\nthis type of direct editing is intended:\n\nWhen the purpose of the TurboIntegrator process is to make a small change to a large dimension.\nIn this case, direct editing will be more efficient because it avoids copying and completely\nrewriting the large dimension.\nWhen the purpose of the TurboIntegrator process is to load large volumes of data into a cube. In\nthis case the process' Metadata procedure is deliberately kept empty, and any element modification\nneeded to support data loading is performed using direct calls in the Data procedure. When the\nMetadata procedure is empty, the process skips an entire iteration over the external datasource,\nwhich can result in faster data loads."
        },
        {
            "trigger": "DIMENSIONELEMENTDELETE",
            "annotation": "DimensionElementDelete(DimName, ElName);",
            "contents": "DIMENSIONELEMENTDELETE(${1:sDim}, ${2:sEle});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_dimensionelementdelete.html\">Documentation</a> DimensionElementDelete deletes an element from a dimension.\nNote: Deleting an element deletes all cube data identified by that element.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "DIMENSIONELEMENTDELETEDIRECT",
            "annotation": "DimensionElementDeleteDirect(DimName, ElName);",
            "contents": "DIMENSIONELEMENTDELETEDIRECT(${1:sDim}, ${2:sEle});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_dimensionelementdeletedirect.html\">Documentation</a> DimensionElementDeleteDirect deletes an element from a dimension by directly editing the\ndimension.\nThis function is valid in TM1 TurboIntegrator processes\nonly.\nNote: Deleting an element deletes all cube data identified by that element.\nThe default means of editing a dimension in TM1 is to use a\nwhole-copy editing pattern. In that pattern, an editing copy of the dimension is created, edits are\napplied to the editing copy, then finally the actual dimension is rewritten using the editing copy\nas a template. TurboIntegrator supports whole-copy editing automatically whenever dimension editing\nTurboIntegrator functions (like DimensionElementDelete) are used in the Metadata procedure of the\nprocess. TurboIntegrator automatically creates the editing copy and applies editing operations to\nit, then rewrites the actual dimension at the end of the Metadata procedure. \n Direct edits are different in that no editing copy is involved. Instead, the operations are\nperformed directly on the actual dimension. There are two different, specialized use cases for which\nthis type of direct editing is intended:\n\nWhen the purpose of the TurboIntegrator process is to make a small change to a large dimension.\nIn this case, direct editing will be more efficient because it avoids copying and completely\nrewriting the large dimension.\nWhen the purpose of the TurboIntegrator process is to load large volumes of data into a cube. In\nthis case the process' Metadata procedure is deliberately kept empty, and any element modification\nneeded to support data loading is performed using direct calls in the Data procedure. When the\nMetadata procedure is empty, the process skips an entire iteration over the external datasource,\nwhich can result in faster data loads."
        },
        {
            "trigger": "DIMENSIONELEMENTEXISTS",
            "annotation": "DimensionElementExists(DimName, ElName);",
            "contents": "DIMENSIONELEMENTEXISTS(${1:sDim}, ${2:sEle});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ti_func_dimensionelementexists.html\">Documentation</a> DimensionElementExists determines whether a specific element exists in a dimension on the\nserver from which a TurboIntegrator process is executed. The function returns 1 if the element\nexists in the dimension on the server, otherwise it returns 0.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "DIMENSIONELEMENTINSERT",
            "annotation": "DimensionElementInsert(DimName, InsertionPoint, ElName, ElType);",
            "contents": "DIMENSIONELEMENTINSERT(${1:sDim}, ${2:sElePrev}, ${3:sEle}, ${4:sType});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_dimensionelementinsert.html\">Documentation</a> DimensionElementInsert adds an element to a dimension. You can use this function to add\nnumeric, string, or consolidated elements. You can't use this function in the Data or Epilog\nprocedures of a TurboIntegrator process.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "DIMENSIONELEMENTINSERTDIRECT",
            "annotation": "DimensionElementInsertDirect(DimName, InsertionPoint, ElName, ElType);",
            "contents": "DIMENSIONELEMENTINSERTDIRECT(${1:sDim}, ${2:sElePrev}, ${3:sEle}, ${4:sType});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_dimensionelementinsertdirect.html\">Documentation</a> DimensionElementInsertDirect adds an element to a dimension by directly editing the\ndimension. You can use this function to add numeric, string, or consolidated elements.\nThis function is valid in TM1 TurboIntegrator processes\nonly.\nThe default method of editing a dimension in TM1 is to use\na whole-copy editing pattern. In that pattern, an editing copy of the dimension is created, edits\nare applied to the editing copy, then finally the actual dimension is rewritten using the editing\ncopy as a template. TurboIntegrator supports whole-copy editing automatically whenever dimension\nediting TurboIntegrator functions (like DimensionElementInsert) are used in the metadata tab of the\nprocess. TurboIntegrator automatically creates the editing copy and applies editing operations to\nit, then rewrites the actual dimension at the end of the Metadata procedure. \nDirect edits are different in that no editing copy is involved. Instead, the operations are\nperformed directly on the actual dimension. There are two different, specialized use cases for which\nthis type of direct editing is intended:\n\nWhen the purpose of the TurboIntegrator process is to make a small change to a large dimension.\nIn this case, direct editing will be more efficient because it avoids copying and completely\nrewriting the large dimension.\nWhen the purpose of the TurboIntegrator process is to load large volumes of data into a cube. In\nthis case the process' Metadata procedure is deliberately kept empty, and any element insertion\nneeded to support data loading is performed using direct calls in the Data procedure. When the\nMetadata procedure is empty, the process skips an entire iteration over the external datasource,\nwhich can result in faster data loads."
        },
        {
            "trigger": "DIMENSIONELEMENTPRINCIPALNAME",
            "annotation": "DimensionElementPrincipalName(DimName, ElName)",
            "contents": "DIMENSIONELEMENTPRINCIPALNAME(${1:sDim}, ${2:sEle})",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_dimensionelementprincipalname.html\">Documentation</a> DimensionElementPrincipalName returns the principal name of an element or element\nalias.\nTurboIntegrator must use principal element names when updating dimensions; element aliases cannot\nbe used. This function is useful for determining principal element names while attempting to update\na dimension when only element aliases are available to the TurboIntegrator process.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "DIMENSIONEXISTS",
            "annotation": "DimensionExists(DimName);",
            "contents": "DIMENSIONEXISTS(${1:sDim});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_dimensionexists.html\">Documentation</a> DimensionExists determines whether a specific dimension exists on the server from which a\nTurboIntegrator process is executed. The function returns 1 if the dimension exists on the server,\notherwise it returns 0.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "DIMENSIONHIERARCHYCREATE",
            "annotation": "DimensionHierarchyCreate(DimName, HierName);",
            "contents": "DIMENSIONHIERARCHYCREATE(${1:sDim}, ${2:sHier});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ti_func_dimensionhierarchycreate.html\">Documentation</a> DimensionHierarchyCreate creates a new hierarchy in an existing dimension. The hierarchy\ncannot have the same name as the dimension.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "DIMENSIONSORTORDER",
            "annotation": "DimensionSortOrder(DimName, CompSortType, CompSortSense, ElSortType, ElSortSense);",
            "contents": "DIMENSIONSORTORDER(${1:sDim}, ${2:sCompSortType}, ${3:sCompSortSense}, ${4:sEleSortType}, ${5:sEleSortSense});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_dimensionsortorder.html\">Documentation</a> DimensionSortOrder sets a sort type and sense for dimension elements and for components\nof consolidated elements within a dimension. The sort order defined by DimensionSortOrder determines\nhow the subset displays in the Subset Editor.\nDimensionSortOrder sets properties for a dimension; the dimension is not actually sorted until it\nis saved on the server.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "DIMENSIONTIMELASTUPDATED",
            "annotation": "DimensionTimeLastUpdated(dimension);",
            "contents": "DIMENSIONTIMELASTUPDATED(${1:sDim});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_dimensiontimelastupdated.html\">Documentation</a> DimensionTimeLastUpdated returns a serial value that indicates the date and time at which\na specified dimension was last updated.\nThe serial value returned by this function uses a starting time of Jan 1 1900 12:00:00 A.M.,\nwhich is equivalent to the value 1.0. Dates are represented by integers, while times are represented\nas decimal numbers between .0 and .999999. This is consistent with the way date/time serial values\nare stored and reported in Microsoft Excel.\nNote: By default, TM1 date/time serial values use a starting\ntime of Jan 1 1960 12:00:00 A.M. To resolve the inconsistency between Excel and TM1 date/time serial\nvalues, you can set UseExcelSerialDate=T in your Tm1s.cfg file to instruct the TM1\nserver to use date/time serial values that conform to Excel standards.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "DIMENSIONTOPELEMENTINSERT",
            "annotation": "DimensionTopElementInsert(DimName, InsertionPoint, ElName);",
            "contents": "DIMENSIONTOPELEMENTINSERT(${1:sDim}, ${2:sElePrev}, ${3:sEle});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_dimensiontopelementinsert.html\">Documentation</a> DimensionTopElementInsert creates a root element in a dimension. If the dimension already\nhas a single root, then this element will not be created.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "DIMENSIONTOPELEMENTINSERTDIRECT",
            "annotation": "DimensionTopElementInsertDirect(DimName, InsertionPoint, ElName);",
            "contents": "DIMENSIONTOPELEMENTINSERTDIRECT(${1:sDim}, ${2:sElePrev}, ${3:sEle});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_dimensiontopelementinsertdirect.html\">Documentation</a> DimensionTopElementInsertDirect creates a root element in a dimension by directly editing\nthe dimension. If the dimension already has a single root, then this element will not be\ncreated.\nThis function is valid in TM1 TurboIntegrator processes\nonly.\nThe default means of editing a dimension in TM1 is to use a\nwhole-copy editing pattern. In that pattern, an editing copy of the dimension is created, edits are\napplied to the editing copy, then finally the actual dimension is rewritten using the editing copy\nas a template. TurboIntegrator supports whole-copy editing automatically whenever dimension editing\nTurboIntegrator functions (like DimensionTopElementInsert) are used in the Metadata procedure of the\nprocess. TurboIntegrator automatically creates the editing copy and applies editing operations to\nit, then rewrites the actual dimension at the end of the Metadata procedure. \n Direct edits are different in that no editing copy is involved. Instead, the operations are\nperformed directly on the actual dimension. There are two different, specialized use cases for which\nthis type of direct editing is intended:\n\nWhen the purpose of the TurboIntegrator process is to make a small change to a large dimension.\nIn this case, direct editing will be more efficient because it avoids copying and completely\nrewriting the large dimension.\nWhen the purpose of the TurboIntegrator process is to load large volumes of data into a cube. In\nthis case the process' Metadata procedure is deliberately kept empty, and any element modification\nneeded to support data loading is performed using direct calls in the Data procedure. When the\nMetadata procedure is empty, the process skips an entire iteration over the external datasource,\nwhich can result in faster data loads."
        },
        {
            "trigger": "DIMENSIONUPDATEDIRECT",
            "annotation": "DimensionUpdateDirect(DimName);",
            "contents": "DIMENSIONUPDATEDIRECT(${1:sDim});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_dimensionupdatedirect.html\">Documentation</a> DimensionUpdateDirect performs a full rewrite of a dimension that has been subject to\ndirect editing in a TurboIntegrator process, essentially compacting the memory footprint of the\ndimension.\nA dimension that undergoes a series of direct-only edits (element deletions, in particular) will\neventually use more memory than its fully-rewritten counterpart would. This function can optionally\nbe used after directly editing a dimension with DimensionElementInsertDirect,\nDimensionElementDeleteDirect, DimensionElementComponentAddDirect,\nDimensionElementComponentDeleteDirect, and/or DimensionTopElementInsertDirect. Calling\nDimensionUpdateDirect incurs an initial full-copy memory cost, however it can be used to guarantee\nthat the dimension is at its smallest possible memory footprint after processing is complete.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "CREATEHIERARCHYBYATTRIBUTE",
            "annotation": "CreateHierarchyByAttribute(DimName, AttrName[, emptyParent[, rootName]]);",
            "contents": "CREATEHIERARCHYBYATTRIBUTE(${1:sDim}, ${2:sAttr}, ${3:sEleEmpty}, ${4:sEleRoot});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_createhierarchybyattribute.html\">Documentation</a> CreateHierarchyByAttribute creates a simple 3-level hierarchy from a single attribute. \nThe new hierarchy consists of a single high-level root element, a middle-level of consolidations\nrepresenting existing attribute values, and a lower-level of dimension leaves that include the\nassociated attribute value. \nThis function is valid in TM1 TurboIntegrator processes\nonly.\nNote: This function creates a hierarchy from the current set of attribute values, but the system\ndoes not automatically keep the hierarchy in-sync with the attribute data as it changes. Modelers\nmust regenerate the hierarchy as needed."
        },
        {
            "trigger": "HIERARCHYCONTAINSALLLEAVES",
            "annotation": "HierarchyContainsAllLeaves(DimName, HierName);",
            "contents": "HIERARCHYCONTAINSALLLEAVES(${1:sDim}, ${2:sHier});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_hierarchycontainsallleaves.html\">Documentation</a> HierarchyContainsAllLeaves returns true only if the specified hierarchy contains the full\nset of leaf elements that are present in the dimension. That is, it contains all the leaf elements\nthat can be seen in the special Leaves hierarchy. If the specified hierarchy is missing one or more\nleaf elements, this function returns false.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "HIERARCHYCREATE",
            "annotation": "HierarchyCreate(DimName, HierName);",
            "contents": "HIERARCHYCREATE(${1:sDim}, ${2:sHier});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_hierarchycreate.html\">Documentation</a> HierarchyCreate creates a new hierarchy in an existing dimension. The hierarchy cannot\nhave the same name as the dimension.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "HIERARCHYDELETEALLELEMENTS",
            "annotation": "HierarchyDeleteAllElements(DimName, HierName);",
            "contents": "HIERARCHYDELETEALLELEMENTS(${1:sDim}, ${2:sHier});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_hierarchydeleteallelements.html\">Documentation</a> HierarchyDeleteAllElements deletes all the elements in a hierarchy. This function is\nuseful for recreating dimension hierarchies.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "HIERARCHYDELETEELEMENTS",
            "annotation": "HierarchyDeleteElements(DimensionName, HierarchyName, Subset)",
            "contents": "HIERARCHYDELETEELEMENTS(${1:sDim}, ${2:sHier}, ${3:sSub})",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_hierarchydeleteelements.html\">Documentation</a> HierarchyDeleteElements deletes leaf elements from a hierarchy using a subset of\nelements.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "HIERARCHYDESTROY",
            "annotation": "HierarchyDestroy(DimName, HierName);",
            "contents": "HIERARCHYDESTROY(${1:sDim}, ${2:sHier});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_hierarchydestroy.html\">Documentation</a> HierarchyDestroy deletes a hierarchy from the TM1\ndatabase.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "HIERARCHYELEMENTCOMPONENTADD",
            "annotation": "HierarchyElementComponentAdd(DimName, HierName, ConsolidatedElName, ElName, ElWeight);",
            "contents": "HIERARCHYELEMENTCOMPONENTADD(${1:sDim}, ${2:sHier}, ${3:sElePar}, ${4:sEle}, ${5:nWeight});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_hierarchyelementcomponentadd.html\">Documentation</a> HierarchyElementComponentAdd adds a component (child) to a consolidated element. You\ncan't use this function in the Epilog procedure of a TurboIntegrator process.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "HIERARCHYELEMENTCOMPONENTADDDIRECT",
            "annotation": "HierarchyElementComponentAddDirect(DimName, HierName, ConsolidatedElName, ElName, ElWeight);",
            "contents": "HIERARCHYELEMENTCOMPONENTADDDIRECT(${1:sDim}, ${2:sHier}, ${3:sElePar}, ${4:sEle}, ${5:nWeight});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_hierarchyelementcomponentadddirect.html\">Documentation</a> HierarchyElementComponentAddDirect adds a component (child) to a consolidated element by\ndirectly editing a dimension.\nThis function is valid in TM1 TurboIntegrator processes\nonly.\nThe default method of editing a dimension in Cognos\u00c2\u00ae\nTM1 is to use a whole-copy editing pattern. In that pattern,\nan editing copy of the dimension is created, edits are applied to the editing copy, then finally the\nactual dimension is rewritten using the editing copy as a template. TurboIntegrator supports\nwhole-copy editing automatically whenever dimension editing TurboIntegrator functions (like\nHierarchyElementComponentAdd) are used in the Metadata procedure of the process. TurboIntegrator\nautomatically creates the editing copy and applies editing operations to it, then rewrites the\nactual dimension at the end of the Metadata procedure. \n Direct edits are different in that no editing copy is involved. Instead, the operations are\nperformed directly on the actual dimension. There are two different, specialized use cases for which\nthis type of direct editing is intended:\n\nWhen the purpose of the TurboIntegrator process is to make a small change to a large dimension.\nIn this case, direct editing will be more efficient because it avoids copying and completely\nrewriting the large dimension.\nWhen the purpose of the TurboIntegrator process is to load large volumes of data into a cube. In\nthis case the process' Metadata procedure is deliberately kept empty, and any element modification\nneeded to support data loading is performed using direct calls in the Data procedure. When the\nMetadata procedure is empty, the process skips an entire iteration over the external datasource,\nwhich can result in faster data loads."
        },
        {
            "trigger": "HIERARCHYELEMENTCOMPONENTDELETE",
            "annotation": "HierarchyElementComponentDelete(DimName, HierName, ConsolidatedElName, ElName);",
            "contents": "HIERARCHYELEMENTCOMPONENTDELETE(${1:sDim}, ${2:sHier}, ${3:sElePar}, ${4:sEle});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_hierarchyelementcomponentdelete.html\">Documentation</a> HierarchyElementComponentDelete deletes a component (child) from a consolidated\nelement.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "HIERARCHYELEMENTCOMPONENTDELETEDIRECT",
            "annotation": "HierarchyElementComponentDeleteDirect(DimName, HierName, ConsolidatedElName, ElName);",
            "contents": "HIERARCHYELEMENTCOMPONENTDELETEDIRECT(${1:sDim}, ${2:sHier}, ${3:sElePar}, ${4:sEle});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_hierarchyelementcomponentdeletedirect.html\">Documentation</a> HierarchyElementComponentDeleteDirect deletes a component (child) from a consolidated\nelement by directly editing the dimension.\nThis function is valid in TM1 TurboIntegrator processes\nonly.\nThe default method of editing a dimension in TM1 is to use\na whole-copy editing pattern. In that pattern, an editing copy of the dimension is created, edits\nare applied to the editing copy, then finally the actual dimension is rewritten using the editing\ncopy as a template. TurboIntegrator supports whole-copy editing automatically whenever dimension\nediting TurboIntegrator functions (like HierarchyElementComponentDelete) are used in the Metadata\nprocedure of the process. TurboIntegrator automatically creates the editing copy and applies editing\noperations to it, then rewrites the actual dimension at the end of the Metadata procedure. \n Direct edits are different in that no editing copy is involved. Instead, the operations are\nperformed directly on the actual dimension. There are two different, specialized use cases for which\nthis type of direct editing is intended:\n\nWhen the purpose of the TurboIntegrator process is to make a small change to a large dimension.\nIn this case, direct editing will be more efficient because it avoids copying and completely\nrewriting the large dimension.\nWhen the purpose of the TurboIntegrator process is to load large volumes of data into a cube. In\nthis case the process' Metadata procedure is deliberately kept empty, and any element modification\nneeded to support data loading is performed using direct calls in the Data procedure. When the\nMetadata procedure is empty, the process skips an entire iteration over the external datasource,\nwhich can result in faster data loads."
        },
        {
            "trigger": "HIERARCHYELEMENTDELETE",
            "annotation": "HierarchyElementDelete(DimName, HierName, ElName);",
            "contents": "HIERARCHYELEMENTDELETE(${1:sDim}, ${2:sHier}, ${3:sEle});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_hierarchyelementdelete.html\">Documentation</a> HierarchyElementDelete deletes an element from a hierarchy.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "HIERARCHYELEMENTDELETEDIRECT",
            "annotation": "HierarchyElementDeleteDirect(DimName, HierName, ElName);",
            "contents": "HIERARCHYELEMENTDELETEDIRECT(${1:sDim}, ${2:sHier}, ${3:sEle});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_hierarchyelementdeletedirect.html\">Documentation</a> HierarchyElementDeleteDirect deletes an element from a dimension by directly editing the\ndimension.\nThis function is valid in TM1 TurboIntegrator processes\nonly.\nNote: Deleting an element deletes all cube data identified by that element.\nThe default means of editing a dimension in TM1 is to use a\nwhole-copy editing pattern. In that pattern, an editing copy of the dimension is created, edits are\napplied to the editing copy, then finally the actual dimension is rewritten using the editing copy\nas a template. TurboIntegrator supports whole-copy editing automatically whenever dimension editing\nTurboIntegrator functions (like DimensionElementDelete) are used in the Metadata procedure of the\nprocess. TurboIntegrator automatically creates the editing copy and applies editing operations to\nit, then rewrites the actual dimension at the end of the Metadata procedure. \nDirect edits are different in that no editing copy is involved. Instead, the operations are\nperformed directly on the actual dimension. There are two different, specialized use cases for which\nthis type of direct editing is intended:\n\nWhen the purpose of the TurboIntegrator process is to make a small change to a large dimension.\nIn this case, direct editing will be more efficient because it avoids copying and completely\nrewriting the large dimension.\nWhen the purpose of the TurboIntegrator process is to load large volumes of data into a cube. In\nthis case the process' Metadata procedure is deliberately kept empty, and any element modification\nneeded to support data loading is performed using direct calls in the Data procedure. When the\nMetadata procedure is empty, the process skips an entire iteration over the external datasource,\nwhich can result in faster data loads."
        },
        {
            "trigger": "HIERARCHYELEMENTEXISTS",
            "annotation": "HierarchyElementExists(DimName, HierName, ElemName);",
            "contents": "HIERARCHYELEMENTEXISTS(${1:sDim}, ${2:sHier}, ${3:sEle});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ti_func_hierarchyelementexists.html\">Documentation</a> HierarchyElementExists determines whether a specific elements exists in a hierarchy on\nthe server from which a TurboIntegrator process is executed. The function returns 1 if the elements\nexists in the hierarchy on the server, otherwise it returns 0.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "HIERARCHYELEMENTINSERT",
            "annotation": "HierarchyElementInsert(DimName, HierName, InsertionPoint, ElName, ElType);",
            "contents": "HIERARCHYELEMENTINSERT(${1:sDim}, ${2:sHier}, ${3:sElePrev}, ${4:sEle}, ${5:sType});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_hierarchyelementinsert.html\">Documentation</a> HierarchyElementInsert adds an element to a dimension. You can use this function to add\nnumeric, string, or consolidated elements. You can't use this function in the Data or Epilog\nprocedures of a TurboIntegrator process.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "HIERARCHYELEMENTINSERTDIRECT",
            "annotation": "HierarchyElementInsertDirect(DimName, HierName, InsertionPoint, ElName, ElType);",
            "contents": "HIERARCHYELEMENTINSERTDIRECT(${1:sDim}, ${2:sHier}, ${3:sElePrev}, ${4:sEle}, ${5:sType});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_hierarchyelementinsertdirect.html\">Documentation</a> HierarchyElementInsertDirect adds an element to a dimension by directly editing the\ndimension. You can use this function to add numeric, string, or consolidated elements.\nThis function is valid in TM1 TurboIntegrator processes\nonly.\nThe default means of editing a dimension in TM1 is to use a\nwhole-copy editing pattern. In that pattern, an editing copy of the dimension is created, edits are\napplied to the editing copy, then finally the actual dimension is rewritten using the editing copy\nas a template. TurboIntegrator supports whole-copy editing automatically whenever dimension editing\nTurboIntegrator functions (like HierarchyElementInsert) are used in the metadata tab of the process.\nTurboIntegrator automatically creates the editing copy and applies editing operations to it, then\nrewrites the actual dimension at the end of the Metadata procedure. \n Direct edits are different in that no editing copy is involved. Instead, the operations are\nperformed directly on the actual dimension. There are two different, specialized use cases for which\nthis type of direct editing is intended:\n\nWhen the purpose of the TurboIntegrator process is to make a small change to a large dimension.\nIn this case, direct editing will be more efficient because it avoids copying and completely\nrewriting the large dimension.\nWhen the purpose of the TurboIntegrator process is to load large volumes of data into a cube. In\nthis case the process' Metadata procedure is deliberately kept empty, and any element insertion\nneeded to support data loading is performed using direct calls in the Data procedure. When the\nMetadata procedure is empty, the process skips an entire iteration over the external datasource,\nwhich can result in faster data loads."
        },
        {
            "trigger": "HIERARCHYELEMENTPRINCIPALNAME",
            "annotation": "HierarchyElementPrincipalName(DimName, HierName, ElName)",
            "contents": "HIERARCHYELEMENTPRINCIPALNAME(${1:sDim}, ${2:sHier}, ${3:sEle})",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_hierarchyelementprincipalname.html\">Documentation</a> HierarchyElementPrincipalName returns the principal name of an element or element\nalias.\nTurboIntegrator must use principal element names when updating dimensions; element aliases cannot\nbe used. This function is therefore useful for determining principal element names while attempting\nto update a dimension when only element aliases are available to the TurboIntegrator process.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "HIERARCHYEXISTS",
            "annotation": "HierarchyExists(DimName, HierName);",
            "contents": "HIERARCHYEXISTS(${1:sDim}, ${2:sHier});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_hierarchyexists.html\">Documentation</a> HierarchyExists determines whether a specific hierarchy exists on the server from which a\nTurboIntegrator process is executed. The function returns 1 if the hierarchy exists on the server,\notherwise it returns 0.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "HIERARCHYHASORPHANEDLEAVES",
            "annotation": "HierarchyHasOrphanedLeaves(DimName, HierName);",
            "contents": "HIERARCHYHASORPHANEDLEAVES(${1:sDim}, ${2:sHier});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_hierarchyhasorphanedleaves.html\">Documentation</a> HierarchyHasOrphanedLeaves returns 1 if there are one or more elements in the specified\nhierarchy that are not components of a parent element in that hierarchy.\n The function returns 1 if the hierarchy exists on the server, otherwise it returns 0. This\nfunction returns 0 if all leaf elements in the hierarchy are a component of one or more parent\nelements. Values stored against such elements will not be aggregated.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "HIERARCHYSORTORDER",
            "annotation": "HierarchySortOrder(DimName, HierName, CompSortType, CompSortSense, ElSortType, ElSortSense);",
            "contents": "HIERARCHYSORTORDER(${1:sDim}, ${2:sHier}, ${3:sCompSortType}, ${4:sCompSortSense}, ${5:sEleSortType}, ${6:sEleSortSense});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_hierarchysortorder.html\">Documentation</a> HierarchySortOrder sets a sort type and sense for dimension elements and for components\nof consolidated elements within a dimension. The sort order defined by DimensionSortOrder determines\nhow the subset displays in the Subset Editor.\nDimensionSortOrder sets properties for a dimension; the dimension is not actually sorted until it\nis saved on the server.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "HIERARCHYTIMELASTUPDATED",
            "annotation": "HierarchyTimeLastUpdated(dimension, hierarchy);",
            "contents": "HIERARCHYTIMELASTUPDATED(${1:sDim}, ${2:sHier});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_hierarchytimelastupdated.html\">Documentation</a> HierarchyTimeLastUpdated indicates when a specified dimension hierarchy was last updated.\nThe function returns a real number that represents the current day (including the hour, minute,\nsecond, and millisecond) since the beginning of the year 1900.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "HIERARCHYTOPELEMENTINSERT",
            "annotation": "HierarchyTopElementInsert(DimName, HierName, InsertionPoint, ElName);",
            "contents": "HIERARCHYTOPELEMENTINSERT(${1:sDim}, ${2:sHier}, ${3:sElePrev}, ${4:sEle});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_hierarchytopelementinsert.html\">Documentation</a> HierarchyTopElementInsert creates a root element in a dimension. If the dimension already\nhas a single root, then this element will not be created. \nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "HIERARCHYTOPELEMENTINSERTDIRECT",
            "annotation": "HierarchyTopElementInsertDirect(DimName, HierName, InsertionPoint, ElName);",
            "contents": "HIERARCHYTOPELEMENTINSERTDIRECT(${1:sDim}, ${2:sHier}, ${3:sElePrev}, ${4:sEle});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_hierarchytopelementinsertdirect.html\">Documentation</a> HierarchyTopElementInsertDirect creates a root element in a dimension by directly editing\nthe dimension. If the dimension already has a single root, then this element will not be\ncreated.\nThis function is valid in TM1 TurboIntegrator processes\nonly.\nThe default means of editing a dimension in TM1 is to use a\nwhole-copy editing pattern. In that pattern, an editing copy of the dimension is created, edits are\napplied to the editing copy, then finally the actual dimension is rewritten using the editing copy\nas a template. TurboIntegrator supports whole-copy editing automatically whenever dimension editing\nTurboIntegrator functions (like HierarchyTopElementInsert) are used in the Metadata procedure of the\nprocess. TurboIntegrator automatically creates the editing copy and applies editing operations to\nit, then rewrites the actual dimension at the end of the Metadata procedure. \n Direct edits are different in that no editing copy is involved. Instead, the operations are\nperformed directly on the actual dimension. There are two different, specialized use cases for which\nthis type of direct editing is intended:\n\nWhen the purpose of the TurboIntegrator process is to make a small change to a large dimension.\nIn this case, direct editing will be more efficient because it avoids copying and completely\nrewriting the large dimension.\nWhen the purpose of the TurboIntegrator process is to load large volumes of data into a cube. In\nthis case the process' Metadata procedure is deliberately kept empty, and any element modification\nneeded to support data loading is performed using direct calls in the Data procedure. When the\nMetadata procedure is empty, the process skips an entire iteration over the external datasource,\nwhich can result in faster data loads."
        },
        {
            "trigger": "HIERARCHYUPDATEDIRECT",
            "annotation": "HierarchyUpdateDirect(DimName, HierName);",
            "contents": "HIERARCHYUPDATEDIRECT(${1:sDim}, ${2:sHier});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_hierarchyupdatedirect.html\">Documentation</a> HierarchyUpdateDirect performs a full rewrite of a hierarchy that has been subject to\ndirect editing in a TurboIntegrator process, essentially compacting the memory footprint of the\nhierarchy. \nA dimension that undergoes a series of direct-only edits (element deletions, in particular) will\neventually use more memory than its fully-rewritten counterpart would. This function can optionally\nbe used after directly editing a dimension with HierarchyElementInsertDirect,\nHierarchyElementDeleteDirect, HierarchyElementComponentAddDirect,\nHierarchyElementComponentDeleteDirect, and/or HierarchyTopElementInsertDirect. Calling\nHierarchyUpdateDirect incurs an initial full-copy memory cost, however it can be used to guarantee\nthat the dimension is at its smallest possible memory footprint after processing is complete.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "ODBCCLOSE",
            "annotation": "ODBCClose(Source);",
            "contents": "ODBCCLOSE(${1:sDatasource});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_odbcclose.html\">Documentation</a> ODBCClose closes a connection to an ODBC data source. \nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "ODBCOPEN",
            "annotation": "ODBCOpen(Source, ClientName, Password);",
            "contents": "ODBCOPEN(${1:sDatasource}, ${2:sClient}, ${3:sPassword});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_odbcopen.html\">Documentation</a> ODBCOpen opens an ODBC data source for output.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "ODBCOPENEX",
            "annotation": "ODBCOpenEx(Source, ClientName, Password, UseUnicodeODBC);",
            "contents": "ODBCOPENEX(${1:sDatasource}, ${2:sClient}, ${3:sPassword}, ${4:nUseUnicode});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_id_odbcturbointegratorfunctions_n719eb_1926odbcopenex.html\">Documentation</a> ODBCOPENEx opens an ODBC data source for output specifying that the connection should be\nopened as a Unicode connection. \nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "ODBCOUTPUT",
            "annotation": "ODBCOutput(Source, SQLQuery, [SQLQuery2, SQLQuery3, ...]);",
            "contents": "ODBCOUTPUT(${1:sDatasource}, ${2:sQuery1}, ${3:sQuery2}, ${4:sQuery3}, ${5:...});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_odbcoutput.html\">Documentation</a> ODBCOutput executes an SQL update query against an open ODBC data source. You should use\nthe ODBCOpen function to open the data source before calling ODBCOutput, and use ODBCClose to close\nthe data source before exiting the process.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "SETODBCUNICODEINTERFACE",
            "annotation": "SetODBCUnicodeInterface=1",
            "contents": "SETODBCUNICODEINTERFACE()",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_id_odbcturbointegratorfunctions_n719eb_2024setodbcunicodeinterface.html\">Documentation</a> SetODBCUnicodeInterface sets whether the ODBC interface should use the Unicode wide\nfunctions or the regular single-byte character functions. Setting this function to 1 uses the wide\ncharacter ODBC interface.\nSome ODBC driver support either the older single-byte interface as well as a Unicode style\n'wide-character' interface, where characters are passed and retrieved as 16-bit quantities. If the\ndriver chosen does not support one or the other style, a flag is provided to force TurboIntegrator\nto use a particular style of interface.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "EXECUTECOMMAND",
            "annotation": "ExecuteCommand(CommandLine, Wait);",
            "contents": "EXECUTECOMMAND(${1:sCommand}, ${2:nWait});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_executecommand.html\">Documentation</a> ExecuteCommand executes a command line during a process. You can use ExecuteCommand to\nrun a desktop application, but not a service.\nIf you use ExecuteCommand to run an executable, the following conditions apply:\n\nIf the CommandLine argument specifies only the name of a file to be executed, a Windows server looks for the file in both the server database directory and\nin the directory where Tm1s.exe resides. A UNIX server looks\nfor the file only in the server database directory.\nIf the CommandLine argument uses a relative path prefix, both the Windows and UNIX server attempt to\nlocate the file in the server database directory only.\nOn either the Microsoft\nWindows or UNIX\nserver, you can pass an absolute path to the CommandLine argument to execute a file in any\nlocation..\n\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "EXECUTEPROCESS",
            "annotation": "ExecuteProcess(ProcessName, [ParamName1, ParamValue1, ParamName2, ParamValue2]);",
            "contents": "EXECUTEPROCESS(${1:sProcess}, ${2:sParam1}, ${3:sValue1}, ${4:sParam2}, ${5:sValue2});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_executeprocess.html\">Documentation</a> ExecuteProcess lets you execute a TurboIntegrator process from within another process. \nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "GETPROCESSERRORFILEDIRECTORY",
            "annotation": "GetProcessErrorFileDirectory;",
            "contents": "GETPROCESSERRORFILEDIRECTORY();",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_getprocesserrorfiledirectory.html\">Documentation</a> GetProcessErrorFileDirectory returns the full pathname, with trailing slash, of the\ndirectory where TurboIntegrator process error files are written. By default, all process error log\nfiles are written to the data directory of the server on which the process resides.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "GETPROCESSERRORFILENAME",
            "annotation": "GetProcessErrorFilename;",
            "contents": "GETPROCESSERRORFILENAME();",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_getprocesserrorfilename.html\">Documentation</a> GetProcessErrorFilename returns the name of the TurboIntegrator process error log file\nassociated with a process. If the process has not yet generated an error log file, the function\nreturns an empty (null) string.\nImportant:  A process error log file is not generated until all statements in a given\nprocess tab (Prolog, Metadata, Data, or Epilog) have executed. Accordingly, you can use\nGetProcessErrorFilename to check if any previous tabs have generated an error log file, but you\ncannot use the function to determine if the current process tab causes errors to be written to a log\nfile.\nFor example, by determining that GetProcessErrorFilename returns a non-null string in the Epilog\ntab, you can tell that errors were generated in the Prolog, Metadata, or Data tabs. However, you\ncannot use GetProcessErrorFilename in the Data tab to determine if the Data tab generates errors.\n\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "GETPROCESSNAME",
            "annotation": "GetProcessName()",
            "contents": "GETPROCESSNAME(${1:})",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_getprocessname_nc8779.html\">Documentation</a> GetProcessName returns as a string the name of the current process.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "ITEMREJECT",
            "annotation": "ItemReject(ErrorString);",
            "contents": "ITEMREJECT(${1:sMessage});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_itemreject.html\">Documentation</a> ItemReject rejects a source record and places it in the error log, along with a specified\nerror message. \nThis function is valid in TM1 TurboIntegrator processes\nonly.\nWhen ItemReject is executed in the Prolog of a process, any code following the ItemReject\nfunction in the Prolog is skipped and the process proceeds directly to the next procedure in the\nTurboIntgerator process."
        },
        {
            "trigger": "ITEMSKIP",
            "annotation": "ItemSkip;",
            "contents": "ITEMSKIP();",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_itemskip.html\">Documentation</a> ItemSkip forces a process to skip the current data source item. \nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "PROCESSBREAK",
            "annotation": "ProcessBreak;",
            "contents": "PROCESSBREAK();",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_processbreak.html\">Documentation</a> ProcessBreak stops processing source data and proceeds to the Epilog portion of a\nprocess.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "PROCESSERROR",
            "annotation": "ProcessError;",
            "contents": "PROCESSERROR();",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_processerror.html\">Documentation</a> ProcessError causes an immediate termination of a process. \nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "PROCESSEXISTS",
            "annotation": "ProcessExists(ProcessName);",
            "contents": "PROCESSEXISTS(${1:sProcess});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_processexists.html\">Documentation</a> ProcessExists determines whether a specific TurboIntegrator process exists.\nThe ProcessExists function returns one of three possible values:\n\nIf a TurboIntegrator process with the specified name does not exist, the function returns 0. \nIf a process with the specified name does exist and is valid, the function returns 1. \nIf a process with the specified name does exist, but has compilation errors, the function\nreturns -1.\n\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "PROCESSEXITBYCHOREROLLBACK",
            "annotation": "ProcessExitByChoreRollback;",
            "contents": "PROCESSEXITBYCHOREROLLBACK();",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_processexitbychorerollback.html\">Documentation</a> ProcessExitByChoreRollback initiates a chore rollback and exits with an error code.\nSimilar to ChoreRollback, when used inside a TurboIntegrator process, this function\nthrows out all pending edits and cancels further processing. An error message appears in the\ntm1server.log and tm1processorerrorXXX.log files.\nWhen used in a single-commit mode chore, ProcessExitByChoreRollback throws out all pending edits\nfrom all previous processes and exits. \nWhen used in a multi-commit mode chore, ProcessExitByChoreRollback throws out all pending edits\nfrom the current processes and then exits. Changes that have already been committed cannot be rolled\nback.\nProcessExitByChoreRollback returns the error code number.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "PROCESSEXITBYPROCESSROLLBACK",
            "annotation": "ProcessExitByProcessRollback;",
            "contents": "PROCESSEXITBYPROCESSROLLBACK();",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_processexitbyprocessrollback.html\">Documentation</a> ProcessExitByProcessRollback initiates a process rollback and exits with an error code.\nSimilar to ProcessRollback, when used inside a TurboIntegrator process, this\nfunction throws out all pending edits and cancels further processing. An error message appears in\nthe tm1server.log and tm1processorerrorXXX.log files.\nWhen used in a single-commit mode chore, ProcessExitByProcessRollback throws out all pending\nedits from all previous processes and exits.\nWhen used in a multi-commit mode chore, ProcessExitByProcessRollback throws out all pending edits\nfrom the current process and then exits. Changes that have already been committed cannot be rolled\nback.\nProcessExitByProcessRollback returns the error code number.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "PROCESSQUIT",
            "annotation": "ProcessQuit;",
            "contents": "PROCESSQUIT();",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_processquit.html\">Documentation</a> ProcessQuit terminates a TurboIntegrator process. \nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "PROCESSROLLBACK",
            "annotation": "ProcessRollback;",
            "contents": "PROCESSROLLBACK();",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_processrollback.html\">Documentation</a> ProcessRollback initiates a process rollback. When used inside a\nTurboIntegrator process, this function throws out all pending edits and cancels further processing.\nAn error message appears in the tm1server.log and tm1processorerrorXXX.log files.\nNote: In IBM\u00c2\u00ae Planning Analytics with Watson\u00e2\u0084\u00a2 version 2.0.8 or\nlater, when a TurboIntegrator process rolls back and restarts, the process is now represented in the\ntm1server.log file as three steps: starting, restarting because of lock\ncontention or rollback, and then finishing. An entry is added to the\ntm1server.log file that shows the TurboIntegrator process as restarting due to\nlock contention or rollback instead of just starting. This logging is enabled by default without\nsetting any specific debug options.\n\nWhen used in a single-commit mode chore, ProcessRollback throws out all pending edits from all\nprevious processes and continues execution at the next process in the chore. If lock contention is\nencountered after the call to ProcessRollback, the entire chore is restarted.\nWhen used in a multi-commit mode chore, ProcessRollback throws out all pending edits from the\ncurrent process and then continues execution at the next process in the chore. Changes that have\nalready been committed cannot be rolled back. If lock contention is encountered after the call to\nProcessRollback, only the current process is restarted. \nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "RUNPROCESS",
            "annotation": "RunProcess(ProcessName, [ParamName1, ParamValue1, ParamName2, ParamValue2]);",
            "contents": "RUNPROCESS(${1:sProcess}, ${2:sParam1}, ${3:sValue1}, ${4:sParam2}, ${5:sValue2});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_runprocess.html\">Documentation</a> RunProcess lets you run TurboIntegrator processes in parallel, each on its own thread\nthat is managed by TM1\nServer. This\napproach speeds up data load and other operations where TurboIntegrator processes are used to divide\nthe work. \nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "SYNCHRONIZED",
            "annotation": "synchronized(lockName);",
            "contents": "SYNCHRONIZED(${1:sLock});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/c_tm1_ref_tifun_synchronize.html\">Documentation</a> Synchronized is used in a TurboIntegrator script to force serial execution of a\ndesignated set of TurboIntegrator processes. \nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "CUBEPROCESSFEEDERS",
            "annotation": "CubeProcessFeeders(CubeName);",
            "contents": "CUBEPROCESSFEEDERS(${1:sCube});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_cubeprocessfeeders.html\">Documentation</a> CubeProcessFeeders reprocesses all feeders in the rules for a specified cube.\nThis function reprocesses all feeders in the rules for a specified cube. The feeders are normally\nreprocess automatically when a rule file edit is saved, however, if the data changes, and those data\nchanges will change some conditional feeders, this function will need to be called to get those\nconditional feeders re-evaluated.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "CUBERULEAPPEND",
            "annotation": "CubeRuleAppend(CubeName, RuleText, IsCalculationRule);",
            "contents": "CUBERULEAPPEND(${1:sCube}, ${2:sRule}, ${3:nIsCalcRule});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_cuberuleappend.html\">Documentation</a> CubeRuleAppend appends a single line of rule text to a TM1 cube rule.\nEssentially, this function adds a single line of text to a rule (.rux) file. The line of text is\ntypically a rule statement, but can also be a comment. If there is no rule associated with the cube\nat the time this function is executed, a new rule will be created, containing only the passed line.\n\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "CUBERULEDESTROY",
            "annotation": "CubeRuleDestroy(CubeName);",
            "contents": "CUBERULEDESTROY(${1:sCube});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_cuberuledestroy.html\">Documentation</a> CubeRuleDestroy deletes any rule that exists for a specified cube.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "DELETEALLPERSISTENTFEEDERS",
            "annotation": "DeleteAllPersistentFeeders;",
            "contents": "DELETEALLPERSISTENTFEEDERS();",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_deleteallpersfeed_hg201.html\">Documentation</a> DeleteAllPersistentFeeders deletes any .feeder files that have persisted. When this\nfunction is used, all cubes are marked as \"do not save feeders\" so a subsequent SaveData will not\npersist feeders which means all feeders will be re-calculated on a server\nre-start.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "FORCESKIPCHECK",
            "annotation": "ForceSkipCheck()",
            "contents": "FORCESKIPCHECK(${1:})",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_id_rulesmanagementturbointegratorfunctions_n71e7c_2512forceskipcheck.html\">Documentation</a> ForceSkipCheck forces the query to perform as if the cube had a SKIPCHECK in the rules. \nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "RULELOADFROMFILE",
            "annotation": "RuleLoadFromFile(Cube, TextFile);",
            "contents": "RULELOADFROMFILE(${1:sCube}, ${2:sFile});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_ruleloadfromfile.html\">Documentation</a> RuleLoadFromFile creates a TM1 rule for a specified\ncube from a text file. Each rule statement must end with a semi-colon (;) and comments must be\nprefixed with the # character. If a rule already exists for the specified cube, the rule is\noverwritten by the rule created by RuleLoadFromFile. \nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "GETUSEACTIVESANDBOXPROPERTY",
            "annotation": "GetUseActiveSandboxProperty()",
            "contents": "GETUSEACTIVESANDBOXPROPERTY(${1:})",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_getuseactivesandboxproperty_ty6008.html\">Documentation</a> GetUseActiveSandboxProperty returns a Boolean value that indicates whether a process\nreads and writes data to the base data or to the user's active sandbox.\nThis function is valid in TM1 TurboIntegrator processes\nonly.\nThe default is for processes to read and write to the base data.\n\nIf the return is 0, the process is currently reading and writing to the base data.\nIf the return is 1, the process is currently reading and writing to the active sandbox.\n\nNote: This function returns the permanent value for this property as set in the\nArchitect / Server Explorer user interface unlessyou have used the\nSetUseActiveSandboxProperty function in the process. In that case, the value for this property is\ndetermined by the value that was last set with the SetUseActiveSandboxProperty function."
        },
        {
            "trigger": "SERVERACTIVESANDBOXGET",
            "annotation": "ServerActiveSandboxGet();",
            "contents": "SERVERACTIVESANDBOXGET(${1:});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_serveractivesandboxget_nb6700.html\">Documentation</a> ServerActiveSandboxGet returns the name of the user's active sandbox. If the user has no\nactive sandbox, an empty string is returned. Because chores run in the context of a special admin\nuser, and can have no active sandbox, this function always returns an empty string when executed\nusing a chore.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "SERVERACTIVESANDBOXSET",
            "annotation": "ServerActiveSandboxSet(SandboxName)",
            "contents": "SERVERACTIVESANDBOXSET(${1:sSandbox})",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_serveractivesandboxset_bv5007.html\">Documentation</a> ServerActiveSandboxSet sets the active sandbox of the executing user. An empty string is\nused to clear the executing user's active sandbox. This function throws an error if the executing\nuser does not own a sandbox with the passed name. \nBecause chores run in the context of a special admin user, and can have no active sandbox, this\nfunction always throws an error when executed using a chore.\nNote:  For a TurboIntegrator process to read and write values in the context of the executing user's\nactive sandbox, the UseActiveSandbox property must be set. See GetUseActiveSandboxProperty and SetUseActiveSandboxProperty.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "SERVERSANDBOXCLONE",
            "annotation": "ServerSandboxClone(sandboxName, newSandboxName);",
            "contents": "SERVERSANDBOXCLONE(${1:sSandbox}, ${2:sSandboxNew});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_serversandboxclone.html\">Documentation</a> ServerSandboxClone clones an existing sandbox into a new sandbox.\nSandboxes are private workspaces in which a user can enter and store data\nvalues separate from TM1 base data. Sandboxes are stored on\ndisk and, when in use, in memory. \nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "SERVERSANDBOXCREATE",
            "annotation": "ServerSandboxCreate(sandboxName);",
            "contents": "SERVERSANDBOXCREATE(${1:sSandbox});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_serversandbox.create.html\">Documentation</a> ServerSandboxCreate creates a new sandbox.\nSandboxes are private workspaces in which a user can enter and store data\nvalues separate from TM1 base data. Sandboxes are stored on\ndisk and, when in use, in memory. \nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "SERVERSANDBOXESDELETE",
            "annotation": "ServerSandboxesDelete('client|=|Admin#name|=|best::case::scenario', '|', '#');\"",
            "contents": "SERVERSANDBOXESDELETE(${1:'client|=|Admin# name|=|best::case::scenario'}, ${2:'|'}, ${3:'#'})",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_serversandboxesdelete.html\">Documentation</a> ServerSandboxesDelete allows administrators to discard user sandboxes that match certain\ncriteria. \nSandboxes are private workspaces in which a user can enter and store data\nvalues separate from TM1 base data. Sandboxes are stored on\ndisk and, when in use, in memory. \nThis function operates server side and is available through TurboIntegrator and the API function\nServerSandboxesDelete. Using this feature in a TurboIntegrator process, administrators can schedule\nmaintenance using automated chores.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "SERVERSANDBOXDISCARDALLCHANGES",
            "annotation": "ServerSandboxDiscardAllChanges(sandboxName);",
            "contents": "SERVERSANDBOXDISCARDALLCHANGES(${1:sSandbox});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_serversandboxdiscardallchanges.html\">Documentation</a> ServerSandboxDiscardAllChanges discards all changes in an existing sandbox.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "SERVERSANDBOXMERGE",
            "annotation": "ServerSandboxMerge(src, tgt, conflictRes, waitForLocks);",
            "contents": "SERVERSANDBOXMERGE(${1:sSandboxSrc}, ${2:sSandboxTarget}, ${3:conflictRes}, ${4:nWait});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_serversandboxmerge.html\">Documentation</a> ServerSandboxMerge merges a source sandbox into an existing target sandbox. If the target\nsandbox is not specified, the source sandbox is merged into base.\nSandboxes are private workspaces in which a user can enter and store data\nvalues separate from TM1 base data. Sandboxes are stored on\ndisk and, when in use, in memory. \nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "SERVERSANDBOXEXISTS",
            "annotation": "ServerSandboxExists(sandboxname)",
            "contents": "SERVERSANDBOXEXISTS(${1:sSandbox})",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_serversandboxexists.html\">Documentation</a> ServerSandboxExists tests for the existence of the passed sandbox. 1 is returned when the\npassed sandbox exists, 0 otherwise.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "SERVERSANDBOXGET",
            "annotation": "ServerSandboxGet(index)",
            "contents": "SERVERSANDBOXGET(${1:nIndex})",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_serversandboxget.html\">Documentation</a> ServerSandboxGet returns the name of the sandbox identified by the number\nN, where N is the parameter entered.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "SERVERSANDBOXLISTCOUNTGET",
            "annotation": "ServerSandboxListCountGet()",
            "contents": "SERVERSANDBOXLISTCOUNTGET(${1:})",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_serversandboxlistcountget.html\">Documentation</a> ServerSandboxListCountGet returns the count of sandboxes as a number.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "SETUSEACTIVESANDBOXPROPERTY",
            "annotation": "SetUseActiveSandboxProperty(PropertyValue)",
            "contents": "SETUSEACTIVESANDBOXPROPERTY(${1:nValue})",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_setuseactivesandboxproperty_nc6220.html\">Documentation</a> SetUseActiveSandboxProperty controls whether a process reads and writes cube data to the\nbase data or to the user's active sandbox. The default is for processes to read and write to the\nbase data.\nThe scope of this function applies only to the current running process and temporarily overrides\nthe permanent value for this property that is set in the Architect / Server Explorer user\ninterface.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "ADDCLIENT",
            "annotation": "AddClient(ClientName);",
            "contents": "ADDCLIENT(${1:sClient});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_addclient.html\">Documentation</a> AddClient creates a new client on the server. Changes applied through the AddClient\nfunctions do not take effect until the Metadata procedure in a process is completed. This function,\nlike all functions that update metadata, should not be used in the Data or Epilog tabs of a\nprocess.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "ADDGROUP",
            "annotation": "AddGroup(GroupName);",
            "contents": "ADDGROUP(${1:sGroup});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_addgroup.html\">Documentation</a> AddGroup creates a new user group on the server. Changes applied through the AddGroup\nfunction do not take effect until the Metadata procedure in a process is completed. This function,\nlike all functions that update metadata, should not be used in the Data or Epilog tabs of a\nprocess.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "ASSIGNCLIENTTOGROUP",
            "annotation": "AssignClientToGroup(ClientName, GroupName);",
            "contents": "ASSIGNCLIENTTOGROUP(${1:sClient}, ${2:sGroup});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_assignclienttogroup.html\">Documentation</a> AssignClientToGroup assigns an existing client on a server to an existing user group.\nThis function assigns an existing client on a server to an existing user group.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "ASSIGNCLIENTPASSWORD",
            "annotation": "AssignClientPassword(ClientName, Password);",
            "contents": "ASSIGNCLIENTPASSWORD(${1:sClient}, ${2:sPassword});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_assignclientpassword.html\">Documentation</a> AssignClientPassword assigns a password to an existing client on a server.\nAssignClientPassword returns 1 if the password assignment is successful and returns 0 if the\nassignment fails.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "ASSOCIATECAMIDTOGROUP",
            "annotation": "AssociateCAMIDToGroup(GroupName, CAMID, CAMIDDisplayValue);",
            "contents": "ASSOCIATECAMIDTOGROUP(${1:sGroup}, ${2:sEle}, ${3:sName});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_associate_camid_to_group.html\">Documentation</a> AssociateCAMIDToGroup creates an association between a TM1 user group and a\nCAMID.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "CELLSECURITYCUBECREATE",
            "annotation": "CellSecurityCubeCreate(\u00e2\u0080\u0098DataCube\u00e2\u0080\u0099, \u00e2\u0080\u00980:0:1:0\u00e2\u0080\u0099);",
            "contents": "CELLSECURITYCUBECREATE(${1:sCube}, ${2:sPattern});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_cellsecuritycubecreate.html\">Documentation</a> CellSecurityCubeCreate creates a security cube from an existing cube using a reduced set\nof dimensions. This function, like all functions that update metadata, should not be used in the\nData or Epilog tabs of a process.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "CELLSECURITYCUBEDESTROY",
            "annotation": "CellSecurityCubeDestroy(\u00e2\u0080\u0098DataCube\u00e2\u0080\u0099, \u00e2\u0080\u00980:0:1:0\u00e2\u0080\u0099);",
            "contents": "CELLSECURITYCUBEDESTROY(${1:sCube}, ${2:sPattern});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_cellsecuritycubedestroy.html\">Documentation</a> CellSecurityCubeDestroy destroys a security cube that was created from an existing cube.\nThis function, like all functions that update metadata, should not be used in the Data or Epilog\ntabs of a process.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "DELETECLIENT",
            "annotation": "DeleteClient(ClientName);",
            "contents": "DELETECLIENT(${1:sClient});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_deleteclient.html\">Documentation</a> DeleteClient deletes a client from the server. Changes applied through the DeleteClient\nfunction do not take effect until the Metadata procedure in a process is completed. This function,\nlike all functions that update metadata, should not be used in the Data or Epilog tabs of a\nprocess\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "DELETEGROUP",
            "annotation": "DeleteGroup(GroupName);",
            "contents": "DELETEGROUP(${1:sGroup});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_deletegroup.html\">Documentation</a> DeleteGroup deletes a user group from the server. Changes applied through the DeleteGroup\nfunction do not take effect until the Metadata procedure in a process is completed. This function,\nlike all functions that update metadata, should not be used in the Data or Epilog tabs of a\nprocess.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "ELEMENTSECURITYGET",
            "annotation": "ElementSecurityGet(DimName, ElName, Group);",
            "contents": "ELEMENTSECURITYGET(${1:sDim}, ${2:sEle}, ${3:sGroup});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_elementsecurityget.html\">Documentation</a> ElementSecurityGet retrieves the security level assigned to a specified group for a\ndimension element.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "ELEMENTSECURITYPUT",
            "annotation": "ElementSecurityPut(Level, DimName, ElName, Group);",
            "contents": "ELEMENTSECURITYPUT(${1:sLevel}, ${2:sDim}, ${3:sEle}, ${4:sGroup});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_elementsecurityput.html\">Documentation</a> ElementSecurityPut assigns a security level to a specified group for a dimension\nelement.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "HIERARCHYELEMENTSECURITYGET",
            "annotation": "HierarchyElementSecurityGet(DimName, HierName, ElName, Group);",
            "contents": "HIERARCHYELEMENTSECURITYGET(${1:sDim}, ${2:sHier}, ${3:sEle}, ${4:sGroup});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_hierarchyelementsecurityget.html\">Documentation</a> HierarchyElementSecurityGet retrieves the security level assigned to a specified group\nfor a dimension element.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "HIERARCHYELEMENTSECURITYPUT",
            "annotation": "HierarchyElementSecurityPut(Level, DimName, HierName, ElName, Group);",
            "contents": "HIERARCHYELEMENTSECURITYPUT(${1:sLevel}, ${2:sDim}, ${3:sHier}, ${4:sEle}, ${5:sGroup});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_hierarchyelementsecurityput.html\">Documentation</a> HierarchyElementSecurityPut assigns a security level to a specified group for a dimension\nelement.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "REMOVECAMIDASSOCIATION",
            "annotation": "RemoveCAMIDAssociation(CAMID, RemoveCAMID);",
            "contents": "REMOVECAMIDASSOCIATION(${1:sEle}, ${2:sCAMID});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_remove_camid_association.html\">Documentation</a> RemoveCAMIDAssociation removes all associations between TM1 user groups and a specified\nCAMID.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "REMOVECAMIDASSOCIATIONFROMGROUP",
            "annotation": "RemoveCAMIDAssociationFromGroup(GroupName, CAMID);",
            "contents": "REMOVECAMIDASSOCIATIONFROMGROUP(${1:sGroup}, ${2:sEle});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_remove_camid_association_from_group.html\">Documentation</a> RemoveCAMIDAssociationFromGroup removes an association between a TM1 user group and a\nCAMID.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "REMOVECLIENTFROMGROUP",
            "annotation": "RemoveClientFromGroup(ClientName, GroupName);",
            "contents": "REMOVECLIENTFROMGROUP(${1:sClient}, ${2:sGroup});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_removeclientfromgroup.html\">Documentation</a> RemoveClientFromGroup removes a specified client from a user group.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "SETHIERARCHYGROUPSSECURITY",
            "annotation": "SetHierarchyGroupsSecurity(securityLevel, dimension, hierarchy)",
            "contents": "SETHIERARCHYGROUPSSECURITY(${1:sLevel}, ${2:sDim}, ${3:sHier})",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_SetHierarchyGroupsSecurity.html\">Documentation</a> SetHierarchyGroupsSecurity sets the security level for all existing groups for the\nspecified dimension hierarchy. \nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "SETHIERARCHYELEMENTGROUPSSECURITY",
            "annotation": "SetHierarchyElementGroupsSecurity(securityLevel, dimension, hierarchy, element)",
            "contents": "SETHIERARCHYELEMENTGROUPSSECURITY(${1:sLevel}, ${2:sDim}, ${3:sHier}, ${4:sEle})",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_SetHierarchyElementGroupsSecurity.html\">Documentation</a> SetHierarchyElementGroupsSecurity sets the security level for a specified element from a\nhierarchy in a dimension. \nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "SETDIMENSIONGROUPSSECURITY",
            "annotation": "SetDimensionGroupsSecurity(securityLevel, dimension)",
            "contents": "SETDIMENSIONGROUPSSECURITY(${1:sLevel}, ${2:sDim})",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_SetDimensionGroupsSecurity.html\">Documentation</a> SetDimensionGroupsSecurity sets the security level for all existing groups for the\nspecified dimension. \nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "SETELEMENTGROUPSSECURITY",
            "annotation": "SetElementGroupsSecurity(securityLevel, dimension, element)",
            "contents": "SETELEMENTGROUPSSECURITY(${1:sLevel}, ${2:sDim}, ${3:sEle})",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_SetElementGroupsSecurity.html\">Documentation</a> SetElementGroupsSecurity sets the security level for a specified element in a dimension. \nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "SECURITYOVERLAYGLOBALLOCKCELL",
            "annotation": "SecurityOverlayGlobalLockCell(bLock, Cube, element1, ..., elementN)",
            "contents": "SECURITYOVERLAYGLOBALLOCKCELL(${1:nLock}, ${2:sCube}, ${3:sEle1}, ${4:...}, ${5:sEleN})",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_SecurityOverlayGlobalLockCell.html\">Documentation</a> SecurityOverlayGlobalLockCell is used to restrict the access rights of a node to\nread-only by locking it. It uses the global overlay so all users are affected. The overlay cube must\nbe created prior to using this command. The elements provided in the address must be only for the\ndimensions used in the overlay. \nThe process must be configured to modify security data to successfully execute\nSecurityOverlayGlobalLockCell. \nThe function returns True if successful and a major error if unsuccessful.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "SECURITYOVERLAYCREATEGLOBALDEFAULT",
            "annotation": "SecurityOverlayCreateGlobalDefault(Cube, DimensionMap)",
            "contents": "SECURITYOVERLAYCREATEGLOBALDEFAULT(${1:sCube}, ${2:sMap})",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_SecurityOverlayCreateGlobalDefault.html\">Documentation</a> SecurityOverlayCreateGlobalDefault is used to create or destroy a Security Overlay cube,\nand to set the overlay for a given area of a data cube. \nCreating a data cube with a name that signifies an overlay cube will cause the data cube to be\nmade into an overlay if the server is restarted. When the cube is loaded it will be configured as an\noverlay if a matching data cube is found.\nGlobal overlays apply to all users.\nThe process must be configured to modify security data to successfully execute\nSecurityOverlayCreateGlobalDefault. \nThe function returns True if successful and a major error if unsuccessful.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "SECURITYOVERLAYDESTROYGLOBALDEFAULT",
            "annotation": "SecurityOverlayDestroyGlobalDefault(Cube)",
            "contents": "SECURITYOVERLAYDESTROYGLOBALDEFAULT(${1:sCube})",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_SecurityOverlayDestroyGlobalDefault.html\">Documentation</a> SecurityOverlayDestroyGlobalDefault is used to destroy a Security Overlay cube, and to\nset the overlay for a given area of a data cube.\nCreating a data cube with a name that signifies an overlay cube will cause the data cube to be\nmade into an overlay if the server is restarted. When the cube is loaded it will be configured as an\noverlay if a matching data cube is found\nGlobal overlays apply to all users.\nThe process must be configured to modify security data to successfully execute\nSecurityOverlayDestroyGlobalDefault. \nThe function returns True if successful and a major error if unsuccessful.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "SECURITYOVERLAYGLOBALLOCKNODE",
            "annotation": "SecurityOverlayGlobalLockNode(bLock, Cube, Address, [AddressDelimiter])",
            "contents": "SECURITYOVERLAYGLOBALLOCKNODE(${1:nLock}, ${2:sCube}, ${3:sAddress}, ${4:sDelimiter})",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_SecurityOverlayGlobalLockNode.html\">Documentation</a> SecurityOverlayGlobalLockNode is used to restrict the access rights of a node to\nread-only by locking it. It uses the global overlay so all users are affected. The overlay cube must\nbe created prior to using this command. The elements provided in the address must be only for the\ndimensions used in the overlay. \nThe process must be configured to modify security data to successfully execute\nSecurityOverlayGlobalLockNode. \nThe function returns True if successful and a major error if unsuccessful.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "SECURITYREFRESH",
            "annotation": "SecurityRefresh;",
            "contents": "SECURITYREFRESH();",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_securityrefresh.html\">Documentation</a> SecurityRefresh reads all the security control cubes and regenerates the internal\nstructures in the server that are used by TM1 API\nfunctions.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "BATCHUPDATEFINISH",
            "annotation": "BatchUpdateFinish(SaveChanges);",
            "contents": "BATCHUPDATEFINISH(${1:nSave});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_batchupdatefinish.html\">Documentation</a> BatchUpdateFinish instructs the server to exit batch update mode.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "BATCHUPDATEFINISHWAIT",
            "annotation": "BatchUpdateFinishWait(SaveChanges);",
            "contents": "BATCHUPDATEFINISHWAIT(${1:nSave});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_batchupdatefinishwait.html\">Documentation</a> BatchUpdateFinishWait is identical to BatchUpdateFinish except the process waits until\nthe lock becomes available and then commits changes. If a process calls BatchUpdateFinishWait but is\nunable to secure a cube write lock to commit changes, the process waits until the lock becomes\navailable and then commits changes.\nThis function is valid in TM1 TurboIntegrator processes\nonly.\nData changes applied in the process are not rolled back and the process is not re-executed.\nNote: While waiting for the cube write lock, the process releases any read locks it acquired for\nother objects during process execution. Because these read locks are released before the process can\ncommit changes to the cube, the objects for which the read locks are released can be modified\nbefore the cube is updated. This can lead to data inconsistency when using\nBatchUpdateFinishWait.\nWe recommend that BatchUpdateFinishWait be used only in controlled situations where you know that\nother processes are not modifying data or metadata related to the process that calls\nBatchUpdateFinishWait."
        },
        {
            "trigger": "BATCHUPDATESTART",
            "annotation": "BatchUpdateStart;",
            "contents": "BATCHUPDATESTART();",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_batchupdatestart.html\">Documentation</a> BatchUpdateStart enables batch updates.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "DISABLEBULKLOADMODE",
            "annotation": "",
            "contents": "DISABLEBULKLOADMODE()",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_id_servermanipulationturbointegratorfunctions_n7227d_3237disablebulkloadmode.html\">Documentation</a> DisableBulkLoadMode disables bulk load processing.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "ENABLEBULKLOADMODE",
            "annotation": "EnableBulkLoadMode();",
            "contents": "ENABLEBULKLOADMODE(${1:});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_enablebulkloadmode_nc6749.html\">Documentation</a> EnableBulkLoadMode enables bulk load processing for a TurboIntegrator\nprocess.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "REFRESHMDXHIERARCHY",
            "annotation": "RefreshMdxHierarchy(dimensionName, hierarchy)",
            "contents": "REFRESHMDXHIERARCHY(${1:sDim}, ${2:sHier})",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_refreshmdxhierarchy.html\">Documentation</a> RefreshMdxHierarchy updates the MDX hierarchies in a server without requiring you to\nrestart the server.\nUse this function after configuring or editing the custom named hierarchy levels for a dimension\nin the }HierarchyProperties control cube.\nFor details on using named levels with dimensions, see the related section in the IBM\u00c2\u00ae\nCognos\u00c2\u00ae\nTM1 for Developers documentation.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "SAVEDATAALL",
            "annotation": "844WARN2008-04-0116:40:09, 734TM1.ServerTM1ServerImpl::FileSavecouldnotreacquirelockonobjectwithindex0x200002ca",
            "contents": "SAVEDATAALL()",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_savedataall.html\">Documentation</a> SaveDataAll saves all TM1 data from server memory\nto disk and restarts the log file.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "SERVERSHUTDOWN",
            "annotation": "ServerShutDown(SaveData);",
            "contents": "SERVERSHUTDOWN(${1:nSave});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_servershutdown.html\">Documentation</a> ServerShutdown shuts down a server running as an application. ServerShutdown cannot be\nused to shut down a server running as a Windows\nservice.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "HIERARCHYSUBSETALIASGET",
            "annotation": "HierarchySubsetAliasGet(DimName, HierName, SubName);",
            "contents": "HIERARCHYSUBSETALIASGET(${1:sDim}, ${2:sHier}, ${3:sSub});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_hierarchysubsetaliasget.html\">Documentation</a> HierarchySubsetAliasGet returns the alias attribute for a subset within a hierarchy. This\nfunction was introduced in Planning Analytics 2.0.9.10/TM1 Server 11.8.9 and cannot be used in\nprevious versions.\nThis function is valid in TM1\nTurboIntegrator processes only."
        },
        {
            "trigger": "HIERARCHYSUBSETALIASSET",
            "annotation": "HierarchySubsetAliasSet(DimName, HierName, SubName, AliasName);",
            "contents": "HIERARCHYSUBSETALIASSET(${1:sDim}, ${2:sHier}, ${3:sSub}, ${4:sAlias});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_hierarchysubsetaliasset.html\">Documentation</a> HierarchySubsetAliasSet sets the alias attribute to be used in an hierarchy subset.\nHierarchySubsetAliasSet returns 1 if successful, 0 otherwise.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "HIERARCHYSUBSETCREATE",
            "annotation": "HierarchySubsetCreate(DimName, HierName, SubName, [AsTemporary]);",
            "contents": "HIERARCHYSUBSETCREATE(${1:sDim}, ${2:sHier}, ${3:sSub}, ${4:nTemporary});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_hierarchysubsetcreate.html\">Documentation</a> HierarchySubsetCreate creates an empty public subset of a specified hierarchy and\ndimension.\nWhen the optional AsTemporary argument is set to 1, the subset is temporary and\npersists only for the duration of the TurboIntegrator process or chore in which the subset is\ncreated. \nNote:\nFor TM1\nServer version 11.2.0 and\nearlier, temporary subsets were visible and usable only by the process that created it and any of\nits child processes. Temporary subsets were not visible to the ancestor and sibling processes. You\ncould create same-named subsets in sibling child processes with the same parent process.\nFor TM1\nServer version 11.3.0 and\nlater, these temporary subsets are visible to the ancestor and sibling processes. If a parent\nTurboIntegrator process A invokes two child TurboIntegrator processes A1 and A2, and the child\nTurboIntegrator process A1 creates a temporary subset S, the temporary subset S exists for the\nduration of the parent TurboIntegrator process A. You cannot create a temporary subset with the same\nname S in the sibling TurboIntegrator process A2 since the subset is visible and usable by siblings\nA1 and A2.\n\nWhile a temporary subset exists, the temporary subset takes precedence over any same-named public\nsubset. If another TurboIntegrator function references a subset that exists in both a temporary and\npermanent state, the function operates upon the temporary subset. \nThere is no locking associated with a temporary subset, as a temporary subset is never saved.\nThis can result in improved performance, because there is no need for TurboIntegrator to wait for\nlocks to be released before operating upon a temporary subset.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "HIERARCHYSUBSETDELETEALLELEMENTS",
            "annotation": "HierarchySubsetDeleteAllElements(DimName, HierName, SubsetName);",
            "contents": "HIERARCHYSUBSETDELETEALLELEMENTS(${1:sDim}, ${2:sHier}, ${3:sSub});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_hierarchysubsetdeleteallelements.html\">Documentation</a> HierarchySubsetDeleteAllElements deletes all elements from a public subset of a dimension\nhierarchy.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "HIERARCHYSUBSETDESTROY",
            "annotation": "HierarchySubsetDestroy(DimName, HierName, SubName);",
            "contents": "HIERARCHYSUBSETDESTROY(${1:sDim}, ${2:sHier}, ${3:sSub});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_hierarchysubsetdestroy.html\">Documentation</a> HierarchySubsetDestroy deletes a subset from the TM1 database.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "HIERARCHYSUBSETELEMENTEXISTS",
            "annotation": "HierarchySubsetElementExists(DimName, HierName, SubsetName, ElementName);",
            "contents": "HIERARCHYSUBSETELEMENTEXISTS(${1:sDim}, ${2:sHier}, ${3:sSub}, ${4:sEle});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_hierarchysubsetelementexists.html\">Documentation</a> HierarchySubsetElementExists determines whether a specific element exists within a\nspecific public subset on the server from which a TurboIntegrator process is executed.\nHierarchySubsetElementExists cannot be used to determine if an element exists in a private\nsubset.\nIf the element exists in the specified subset, the function returns 1, otherwise it returns\n0.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "HIERARCHYSUBSETELEMENTDELETE",
            "annotation": "HierarchySubsetElementDelete(DimName, HierName, SubName, Index);",
            "contents": "HIERARCHYSUBSETELEMENTDELETE(${1:sDim}, ${2:sHier}, ${3:sSub}, ${4:nIndex});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_hierarchysubsetelementdelete.html\">Documentation</a> HierarchySubsetElementDelete deletes an element from a subset of a dimension\nhierarchy.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "HIERARCHYSUBSETELEMENTGETINDEX",
            "annotation": "HierarchySubsetElementGetIndex(DimName, HierName, SubsetName, ElementName, StartIndex);",
            "contents": "HIERARCHYSUBSETELEMENTGETINDEX(${1:sDim}, ${2:sHier}, ${3:sSub}, ${4:sEle}, ${5:nIndex});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_hierarchysubsetelementgetindex.html\">Documentation</a> HierarchySubsetElementGetIndex retrieves the index of an element in a subset of a\ndimension hierarchy. \nThe function returns the index of the first occurrence of the specified element. If the element\ndoes not exist in the subset or cannot be found, then zero is returned. If the dimension or subset\ncannot be found or an out-of-range start index is specified, then an error is thrown and the\nTurboIntegrator function is stopped.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "HIERARCHYSUBSETELEMENTINSERT",
            "annotation": "HierarchySubsetElementInsert(DimName, HierName, SubName, ElName, Position);",
            "contents": "HIERARCHYSUBSETELEMENTINSERT(${1:sDim}, ${2:sHier}, ${3:sSub}, ${4:sEle}, ${5:nPos});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_hierarchysubsetelementinsert.html\">Documentation</a> HierarchySubsetElementInsert adds an element to an existing subset in a dimension\nhierarchy.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "HIERARCHYSUBSETEXISTS",
            "annotation": "HierarchySubsetExists(DimName, HierName, SubsetName);",
            "contents": "HIERARCHYSUBSETEXISTS(${1:sDim}, ${2:sHier}, ${3:sSub});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_hierarchysubsetexists.html\">Documentation</a> HierarchySubsetExists determines if a specific public subset exists on the server from\nwhich a TurboIntegrator process is executed. The function returns 1 if the subset exists on the\nserver, otherwise it returns 0. Note that this function cannot be used to determine the existence of\nprivate subsets.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "HIERARCHYSUBSETGETSIZE",
            "annotation": "HierarchySubsetGetSize(DimName, HierName, SubsetName);",
            "contents": "HIERARCHYSUBSETGETSIZE(${1:sDim}, ${2:sHier}, ${3:sSub});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_hierarchysubsetgetsize.html\">Documentation</a> HierarchySubsetGetSize returns the number of elements in a subset of a dimension\nhierarchy.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "HIERARCHYSUBSETGETELEMENTNAME",
            "annotation": "HierarchySubsetGetElementName(DimName, HierName, SubsetName, ElementIndex);",
            "contents": "HIERARCHYSUBSETGETELEMENTNAME(${1:sDim}, ${2:sHier}, ${3:sSub}, ${4:nIndex});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_hierarchysubsetgetelementname.html\">Documentation</a> HierarchySubsetGetElementName returns the name of the element at a specified index\nlocation within a given subset of a dimension hierarchy.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "HIERARCHYSUBSETISALLSET",
            "annotation": "HierarchySubsetIsAllSet(DimName, HierName, SubName, Flag);",
            "contents": "HIERARCHYSUBSETISALLSET(${1:sDim}, ${2:sHier}, ${3:sSub}, ${4:nFlag});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_hierarchysubsetisallset.html\">Documentation</a> HierarchySubsetIsAllSet sets a subset to use all elements of the parent dimension.\nHierarchySubsetIsAllSet returns 1 if successful, 0 otherwise.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "HIERARCHYSUBSETMDXGET",
            "annotation": "HierarchySubsetMDXGet(DimName, HierName, SubName);",
            "contents": "HIERARCHYSUBSETMDXGET(${1:sDim}, ${2:sHier}, ${3:sSub});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_hierarchysubsetmdxget.html\">Documentation</a> HierarchySubsetMDXGet retrieves the MDX expression used to create a subset.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "HIERARCHYSUBSETMDXSET",
            "annotation": "HierarchySubsetMDXSet(DimName, HierName, SubName, MDX_expression);",
            "contents": "HIERARCHYSUBSETMDXSET(${1:sDim}, ${2:sHier}, ${3:sSub}, ${4:sMDX});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_hierarchysubsetmdxset.html\">Documentation</a> HierarchySubsetMDXSet applies a specified MDX expression to an existing public subset of\na hierarchy.\nIf the passed MDX expression is valid, the specified subset is saved as a dynamic subset defined\nby the MDX expression. \nIf the passed MDX expression is an empty string, the subset is converted to a static subset that\ncontains the elements that are in place when HierarchySubsetMDXSet is executed. \nThe function returns the number of elements that the subset contains.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "PUBLISHSUBSET",
            "annotation": "PublishSubset(DimName, SubName, OverwriteExistingSubset);",
            "contents": "PUBLISHSUBSET(${1:sDim}, ${2:sSub}, ${3:nOverwrite});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_publishsubset.html\">Documentation</a> PublishSubset publishes a named private subset on the server. This function was\nintroduced in Planning Analytics 2.0.9.10/TM1 Server 11.8.9 and cannot be used in previous\nversions.\nThis function is valid in TM1\nTurboIntegrator processes only."
        },
        {
            "trigger": "SUBSETALIASGET",
            "annotation": "SubsetAliasGet(DimName, SubName);",
            "contents": "SUBSETALIASGET(${1:sDim}, ${2:sSub});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_subsetaliasget.html\">Documentation</a> SubsetAliasGet returns the alias attribute for a subset. This function was introduced in\nPlanning Analytics 2.0.9.10/TM1 Server 11.8.9 and cannot be used in previous versions.\nThis function is valid in TM1\nTurboIntegrator processes only."
        },
        {
            "trigger": "SUBSETALIASSET",
            "annotation": "SubsetAliasSet(DimName, SubName, AliasName);",
            "contents": "SUBSETALIASSET(${1:sDim}, ${2:sSub}, ${3:sAlias});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_subsetaliasset.html\">Documentation</a> SubsetAliasSet sets the alias attribute to be used in a subset. SubsetAliasSet returns 1\nif successful, 0 otherwise.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "SUBSETCREATE",
            "annotation": "SubsetCreate(DimName, SubName, [AsTemporary]);",
            "contents": "SUBSETCREATE(${1:sDim}, ${2:sSub}, ${3:nTemporary});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_subsetcreate.html\">Documentation</a> SubsetCreate creates an empty public subset of a specified dimension.\nWhen the AsTemporary argument is set to 1, the subset is temporary and persists\nonly for the duration of the TurboIntegrator process or a single-commit chore in which the subset is\ncreated. If a parent TurboIntegrator process invokes child TurboIntegrator processes by using the\nExecuteProcess or ExecuteProcessWithReturn function, and the\ntemporary subset is created in one of these child TurboIntegrator processes, the subset persists for\nthe duration of the parent TurboIntegrator process.\nThis function is valid in TM1 TurboIntegrator processes\nonly.\nNote:\nFor TM1\nServer version 11.2.0 and\nearlier, temporary views and subsets were visible and usable only by the process that created it and\nany of its child processes. Temporary views and subsets were not visible to the ancestor and sibling\nprocesses. You could create same-named subsets in sibling child processes with the same parent\nprocess.\nFor TM1\nServer version 11.3.0 and\nlater, these temporary subsets are visible to the ancestor and sibling processes. If a parent\nTurboIntegrator process A invokes two child TurboIntegrator processes A1 and A2, and the child\nTurboIntegrator process A1 creates a temporary subset S, the temporary subset S exists for the\nduration of the parent TurboIntegrator process A. You cannot create a temporary subset with the same\nname S in the sibling TurboIntegrator process A2 since the subset is visible and usable by siblings\nA1 and A2.\n\nA chore is a special case of a parent TurboIntegrator process that invokes a child\nTurboIntegrator process that is scheduled to run at a specific time. You can use two types of\nchores. \n\nSingle-commit\nWithin the scope / execution tree of a single-commit chore, a temporary subset of the same name\ncan be created only for one child TurboIntegrator process.\nMulti-commit\nWithin the scope / execution tree of a multi-commit chore, which commits after every child\nTurboIntegrator process, every child TurboIntegrator process can create a temporary subset of the\nsame name because a temporary subset will not persist after a commit.\n\nWhile a temporary subset exists, the temporary subset takes precedence over any same-named public\nor private subset. If another TurboIntegrator function references a subset that exists in both a\ntemporary and permanent state, the function operates upon the temporary subset.\nThere is no locking associated with a temporary subset because a temporary subset is never saved.\nThis can result in improved performance because there is no need for TurboIntegrator to wait for\nlocks to be released before operating upon a temporary subset."
        },
        {
            "trigger": "SUBSETCREATEBYMDX",
            "annotation": "SubsetCreatebyMDX(SubName, MDX_Expression, [AsTemporary]);",
            "contents": "SUBSETCREATEBYMDX(${1:sSub}, ${2:sMDX}, ${3:nTemporary});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_subsetcreatebymdx.html\">Documentation</a> SubsetCreateByMDX creates a public subset based on a passed MDX expression.\nWhen the AsTemporary argument is set to 1, the subset is temporary and persists\nfor the duration of the TurboIntegrator process or a single-commit chore in which the subset is\ncreated. If a parent TurboIntegrator process invokes child TurboIntegrator processes by using the\nExecuteProcess or ExecuteProcessWithReturn function, and the\ntemporary subset is created in one of these child TurboIntegrator processes, the subset persists for\nthe duration of the parent TurboIntegrator process.\nThis function is valid in TM1 TurboIntegrator processes\nonly.\nNote:\nFor TM1\nServer version 11.2.0 and\nearlier, temporary views and subsets were visible and usable only by the process that created it and\nany of its child processes. Temporary views and subsets were not visible to the ancestor and sibling\nprocesses. You could create same-named subsets in sibling child processes with the same parent\nprocess.\nFor TM1\nServer version 11.3.0 and\nlater, these temporary subsets are visible to the ancestor and sibling processes. If a parent\nTurboIntegrator process A invokes two child TurboIntegrator processes A1 and A2, and the child\nTurboIntegrator process A1 creates a temporary subset S, the temporary subset S exists for the\nduration of the parent TurboIntegrator process A. You cannot create a temporary subset with the same\nname S in the sibling TurboIntegrator process A2 since the subset is visible and usable by siblings\nA1 and A2.\n\nA chore is a special case of a parent TurboIntegrator process that invokes a child\nTurboIntegrator process. You can use two types of chores. \n\nSingle-commit\nWithin the scope / execution tree of a single-commit chore, a temporary subset of the same name\ncan be created only for one child TurboIntegrator process.\nMulti-commit\nWithin the scope / execution tree of a multi-commit chore, which commits after every child\nTurboIntegrator process, every child TurboIntegrator process can create a temporary subset of the\nsame name because a temporary subset will not persist after a commit.\n\nWhile a temporary subset exists, the temporary subset takes precedence over any same-named public\nor private subset. If another TurboIntegrator function references a subset that exists in both a\ntemporary and permanent state, the function operates upon the temporary subset.\nThere is no locking associated with a temporary subset because a temporary subset is never saved.\nThis can result in improved performance because there is no need for TurboIntegrator to wait for\nlocks to be released before operating upon a temporary subset."
        },
        {
            "trigger": "SUBSETDELETEALLELEMENTS",
            "annotation": "SubsetDeleteAllElements(DimName, SubsetName);",
            "contents": "SUBSETDELETEALLELEMENTS(${1:sDim}, ${2:sSub});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_subsetdeleteallelements.html\">Documentation</a> SubsetDeleteAllElements deletes all elements from a public subset.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "SUBSETDESTROY",
            "annotation": "SubsetDestroy(DimName, SubName);",
            "contents": "SUBSETDESTROY(${1:sDim}, ${2:sSub});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_subsetdestroy.html\">Documentation</a> SubsetDestroy deletes a subset from the TM1\ndatabase.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "SUBSETELEMENTDELETE",
            "annotation": "SubsetElementDelete(DimName, SubName, Index);",
            "contents": "SUBSETELEMENTDELETE(${1:sDim}, ${2:sSub}, ${3:nIndex});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_subsetelementdelete.html\">Documentation</a> SubsetElementDelete deletes an element from a subset.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "SUBSETELEMENTEXISTS",
            "annotation": "SubsetElementExists(DimName, SubsetName, ElementName);",
            "contents": "SUBSETELEMENTEXISTS(${1:sDim}, ${2:sSub}, ${3:sEle});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_subsetelementexists.html\">Documentation</a> SubsetElementExists determines whether a specific element exists within a specific public\nsubset on the server from which a TurboIntegrator process is executed. SubsetElementExists cannot be\nused to determine if an element exists in a private subset.\nIf the element exists in the specified subset, the function returns 1, otherwise it returns\n0.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "SUBSETELEMENTGETINDEX",
            "annotation": "SubsetElementGetIndex(DimName, SubsetName, ElementName, StartIndex);",
            "contents": "SUBSETELEMENTGETINDEX(${1:sDim}, ${2:sSub}, ${3:sEle}, ${4:nIndex});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_subsetelementgetindex.html\">Documentation</a> SubsetElementGetIndex retrieves the index of an element in a subset. The function returns\nthe index of the first occurrence of the specified element.\nIf the element does not exist in the subset or cannot be found, then zero is returned. If the\ndimension or subset cannot be found or an out-of-range start index is specified, then an error is\nthrown and the TurboIntegrator function is stopped.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "SUBSETELEMENTINSERT",
            "annotation": "SubsetElementInsert(DimName, SubName, ElName, Position);",
            "contents": "SUBSETELEMENTINSERT(${1:sDim}, ${2:sSub}, ${3:sEle}, ${4:nPos});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_subsetelementinsert.html\">Documentation</a> SubsetElementInsert adds an element to an existing subset.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "SUBSETEXISTS",
            "annotation": "SubsetExists(DimName, SubsetName);",
            "contents": "SUBSETEXISTS(${1:sDim}, ${2:sSub});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_subsetexists.html\">Documentation</a> SubsetExists determines whether a specific public subset exists on the server from which\na TurboIntegrator process is executed. \nThe function returns 1 if the subset exists on the server, otherwise it returns 0. Note that this\nfunction cannot be used to determine the existence of private subsets.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "SUBSETEXPANDABOVESET",
            "annotation": "SubsetExpandAboveSet(DimName, SubsetName, ExpandAboveFlag);",
            "contents": "SUBSETEXPANDABOVESET(${1:sDim}, ${2:sSub}, ${3:nExpandAbove});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_subsetexpandaboveset.html\">Documentation</a> SubsetExpandAboveSet sets the Expand Above property for a subset. The function returns 1\nif successful, otherwise it returns 0.\nWhen this property is set to TRUE, children of a consolidation are displayed above the\nconsolidation when the consolidation displays on a row, and to the left of the consolidation when\nthe consolidation displays on a column.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "SUBSETFORMATSTYLESET",
            "annotation": "SubsetFormatStyleSet(DimName, SubsetName, FormatName);",
            "contents": "SUBSETFORMATSTYLESET(${1:sDim}, ${2:sSub}, ${3:sFormat});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_subsetformatstyleset.html\">Documentation</a> SubsetFormatStyleSet applies an existing display style to a named subset.\nDisplay styles are defined for specific elements. If you apply an existing display style to a\nsubset that includes elements that are not included in the display style, no formatting is applied\nto those elements.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "SUBSETGETELEMENTNAME",
            "annotation": "SubsetGetElementName(DimName, SubsetName, ElementIndex);",
            "contents": "SUBSETGETELEMENTNAME(${1:sDim}, ${2:sSub}, ${3:nIndex});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_subsetgetelementname.html\">Documentation</a> SubsetGetElementName returns the name of the element at a specified index location within\na given subset.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "SUBSETGETSIZE",
            "annotation": "SubsetGetSize(DimName, SubsetName);",
            "contents": "SUBSETGETSIZE(${1:sDim}, ${2:sSub});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_subsetgetsize.html\">Documentation</a> SubsetGetSize returns the number of elements in a subset.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "SUBSETISALLSET",
            "annotation": "SubsetIsAllSet(DimName, SubName, Flag);",
            "contents": "SUBSETISALLSET(${1:sDim}, ${2:sSub}, ${3:nFlag});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_subsetisallset.html\">Documentation</a> SubsetIsAllSet sets a subset to use all elements of the parent dimension. SubsetIsAllSet\nreturns 1 if successful, 0 otherwise.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "SUBSETMDXGET",
            "annotation": "SubsetMDXGet(DimName, SubName);",
            "contents": "SUBSETMDXGET(${1:sDim}, ${2:sSub});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_subsetmdxget.html\">Documentation</a> SubsetMDXGet retrieves the MDX expression used to create a subset.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "SUBSETMDXSET",
            "annotation": "SubsetMDXSet(DimName, SubName, MDX_expression);",
            "contents": "SUBSETMDXSET(${1:sDim}, ${2:sSub}, ${3:sMDX});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_subsetmdxset.html\">Documentation</a> SubsetMDXSet applies a specified MDX expression to an existing public subset.\nIf the passed MDX expression is valid, the specified subset is saved as a dynamic subset defined\nby the MDX expression. \nIf the passed MDX expression is an empty string, the subset is converted to a static subset that\ncontains the elements that are in place when SubsetMDXSet is executed. \nThe function returns the number of elements that the subset contains.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "PUBLISHVIEW",
            "annotation": "PublishView(Cube, View, PublishPrivateSubsets, OverwriteExistingView);",
            "contents": "PUBLISHVIEW(${1:sCube}, ${2:sView}, ${3:nValue}, ${4:nOverwrite});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_publishview.html\">Documentation</a> PublishView publishes a named private view on the server.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "DISABLEMTQVIEWCONSTRUCT",
            "annotation": "DisableMTQViewConstruct()",
            "contents": "DISABLEMTQVIEWCONSTRUCT(${1:})",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ti_func_disablemtqviewconstruct.html\">Documentation</a> DisableMTQViewConstruct disables multi-threaded query processing when calculating a view\nto be used as a TurboIntegrator datasource for a single TurboIntegrator process. When MTQQuery=T in\nthe tms1.cfg file, DisableMTQViewConstruct can be called to override this value on a TurboIntegrator\nprocess.\nThis function must appear in the Prolog, it has no effect in any other procedure within a\nprocess. \nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "ENABLEMTQVIEWCONSTRUCT",
            "annotation": "EnableMTQViewConstruct()",
            "contents": "ENABLEMTQVIEWCONSTRUCT(${1:})",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ti_func_enablemtqviewconstruct.html\">Documentation</a> EnableMTQViewConstruct enables multi-threaded query processing when calculating a view to\nbe used as a TurboIntegrator datasource for a single TurboIntegrator process. When MTQQuery=F in the\ntms1.cfg file, EnableMTQViewConstruct can be called to override this value on a TurboIntegrator\nprocess.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "VIEWCOLUMNDIMENSIONSET",
            "annotation": "ViewColumnDimensionSet(CubeName, ViewName, DimName, StackPosition);",
            "contents": "VIEWCOLUMNDIMENSIONSET(${1:sCube}, ${2:sView}, ${3:sDim}, ${4:nPos});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_viewcolumndimensionset.html\">Documentation</a> ViewColumnDimensionSet sets a column dimension for a TM1 view.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "VIEWCOLUMNSUPPRESSZEROESSET",
            "annotation": "ViewColumnSuppressZeroesSet(Cube, ViewName, Flag);",
            "contents": "VIEWCOLUMNSUPPRESSZEROESSET(${1:sCube}, ${2:sView}, ${3:nFlag});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_viewcolumnsuppresszeroesset.html\">Documentation</a> ViewColumnSuppressZeroesSet suppresses or enables the display of columns containing only\nzero values in a TM1 cube view. \nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "VIEWCONSTRUCT",
            "annotation": "ViewConstruct(CubeName, ViewName);",
            "contents": "VIEWCONSTRUCT(${1:sCube}, ${2:sView});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_viewconstruct.html\">Documentation</a> ViewConstruct constructs, pre-calculates, and stores a Stargate view in memory on a\nserver. This function is useful for pre-calculating and storing large views so they can be quickly\naccessed after a data load or update.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "VIEWCREATE",
            "annotation": "ViewCreate(Cube, ViewName, <AsTemporary>);",
            "contents": "VIEWCREATE(${1:sCube}, ${2:sView}, ${3:nTemporary});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_viewcreate.html\">Documentation</a> ViewCreate creates an empty view of a specified cube.\nWhen the optional AsTemporary argument is set to 1, the view is temporary and\npersists only for the duration of the TurboIntegrator process or chore in which the view is created. \nNote:\nFor TM1\nServer version 11.2.0 and\nearlier, temporary views were visible and usable only by the process that created it and any of its\nchild processes. Temporary views were not visible to the ancestor and sibling processes. You could\ncreate same-named views in sibling child processes with the same parent process.\nFor TM1\nServer version 11.3.0 and\nlater, these temporary views are visible to the ancestor and sibling processes. If a parent\nTurboIntegrator process A invokes two child TurboIntegrator processes A1 and A2, and the child\nTurboIntegrator process A1 creates a temporary view S, the temporary view S exists for the duration\nof the parent TurboIntegrator process A. You cannot create a temporary view with the same name S in\nthe sibling TurboIntegrator process A2 since the view is visible and usable by siblings A1 and\nA2.\n\nWhile a temporary view exists, the temporary view takes precedence over any same-named public\nview. If another TurboIntegrator function references a view that exists in both a temporary and\npermanent state, the function operates upon the temporary view. \nTemporary objects have transaction scope. When a transaction is committed, all temporary objects\nare cleaned up. If a chore is run in single-commit mode where all processes in the chore are\nlogically run within the context of one transaction, then temporary objects that are created in a\nprocess still exist, visible, and available for use, in subsequent processes run by the chore.\nHowever, in multi-commit mode, these processes are cleaned up at commit time of the transaction that\nwrapped the execution of the process that created the temporary object.\nThere is no locking associated with a temporary view, as a temporary view is never saved. This\ncan result in improved performance, because there is no need for TurboIntegrator to wait for locks\nto be released before operating upon a temporary view.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "VIEWCREATEBYMDX",
            "annotation": "ViewCreateByMDX(Cube, ViewName, MDX_expression, <AsTemporary>);",
            "contents": "VIEWCREATEBYMDX(${1:sCube}, ${2:sView}, ${3:sMDX}, ${4:nTemporary});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_viewcreatebymdx.html\">Documentation</a> ViewCreateByMDX creates a view with a specified MDX expression.\nWhen the optional AsTemporary argument is set to 1, the view is temporary and\npersists only for the duration of the TurboIntegrator process or chore in which the view is created. \nNote:\nFor TM1\nServer version 11.2.0 and\nearlier, temporary views were visible and usable only by the process that created it and any of its\nchild processes. Temporary views were not visible to the ancestor and sibling processes. You could\ncreate same-named views in sibling child processes with the same parent process.\nFor TM1\nServer version 11.3.0 and\nlater, these temporary views are visible to the ancestor and sibling processes. If a parent\nTurboIntegrator process A invokes two child TurboIntegrator processes A1 and A2, and the child\nTurboIntegrator process A1 creates a temporary view S, the temporary view S exists for the duration\nof the parent TurboIntegrator process A. You cannot create a temporary view with the same name S in\nthe sibling TurboIntegrator process A2 since the view is visible and usable by siblings A1 and\nA2.\n\nWhile a temporary view exists, the temporary view takes precedence over any same-named public\nview. If another TurboIntegrator function references a view that exists in both a temporary and\npermanent state, the function operates upon the temporary view. \nTemporary objects have transaction scope. When a transaction is committed, all temporary objects\nare cleaned up. If a chore is run in single-commit mode where all processes in the chore are\nlogically run within the context of one transaction, then temporary objects that are created in a\nprocess still exist, visible, and available for use, in subsequent processes run by the chore.\nHowever, in multi-commit mode, these processes are cleaned up at commit time of the transaction that\nwrapped the execution of the process that created the temporary object.\nThere is no locking associated with a temporary view, as a temporary view is never saved. This\ncan result in improved performance because there is no need for TurboIntegrator to wait for locks to\nbe released before operating upon a temporary view.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "VIEWDESTROY",
            "annotation": "ViewDestroy(Cube, ViewName);",
            "contents": "VIEWDESTROY(${1:sCube}, ${2:sView});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_viewdestroy.html\">Documentation</a> ViewDestroy deletes a view from the TM1\ndatabase.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "VIEWEXISTS",
            "annotation": "ViewExists(CubeName, ViewName);",
            "contents": "VIEWEXISTS(${1:sCube}, ${2:sView});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_viewexists.html\">Documentation</a> ViewExists determines whether a specific public view exists on the server from which a\nTurboIntegrator process is executed. The function returns 1 if the view exists on the server,\notherwise it returns 0. Note that this function cannot be used to determine the existence of private\nviews.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "VIEWEXTRACTFILTERBYTITLESSET",
            "annotation": "ViewExtractFilterByTitlesSet(Cube, ViewName, FilterByTitles, Temporary);",
            "contents": "VIEWEXTRACTFILTERBYTITLESSET(${1:sCube}, ${2:sView}, ${3:sFilter}, ${4:nTemporary});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ti_func_viewextractfilterbytitlesset.html\">Documentation</a> ViewExtractFilterByTitlesSet sets an option to filter by titles on consolidated values\nthat are excluded from a view or any associated view extracts. \nTM1 allows the storing of strings on calculated values.\nWhen you exclude a calculated value from a view or view extract you may want to exclude the message\nstring also from the view.\nNote: This function affects views as they exist on the server. The scope of this function is not\nrestricted to extracts generated from a view.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "VIEWEXTRACTSKIPCALCSSET",
            "annotation": "ViewExtractSkipCalcsSet(Cube, ViewName, Flag);",
            "contents": "VIEWEXTRACTSKIPCALCSSET(${1:sCube}, ${2:sView}, ${3:nFlag});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_viewextractskipcalcsset.html\">Documentation</a> ViewExtractSkipCalcsSet sets an option to include/exclude consolidated values in a view\nand any associated view extracts. A view extract is a TM1 view exported as an ASCII comma-delimited (.cma) file.\nNote: This function affects views as they exist on the server. The scope of this function is not\nrestricted to extracts generated from a view.\nViewExtractSkipCalcsSet is the equivalent of the Skip Consolidated Values option in the View\nExtract dialog box. \nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "VIEWEXTRACTSKIPCONSOLIDATEDSTRINGSSET",
            "annotation": "ViewExtractSkipConsolidatedStringsSet(Cube, ViewName, Flag);",
            "contents": "VIEWEXTRACTSKIPCONSOLIDATEDSTRINGSSET(${1:sCube}, ${2:sView}, ${3:nFlag});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_viewextractskipconsolidatedstringsset.html\">Documentation</a> ViewExtractSkipConsolidatedStringsSet sets an option to exclude strings on consolidated\nvalues that are excluded from a view or any associated view extracts. A view extract is a TM1 view exported as an ASCII comma-delimited (.cma)\nfile.\nTM1 allows the storing of strings on calculated values.\nWhen you exclude a calculated value from a view or view extract you may want to exclude the message\nstring also from the view.\nNote: This function affects views as they exist on the server. The scope of this function is not\nrestricted to extracts generated from a view.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "VIEWEXTRACTSKIPRULEVALUESSET",
            "annotation": "ViewExtractSkipRuleValuesSet(Cube, ViewName, Flag);",
            "contents": "VIEWEXTRACTSKIPRULEVALUESSET(${1:sCube}, ${2:sView}, ${3:nFlag});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_viewextractskiprulevaluesset.html\">Documentation</a> ViewExtractSkipRuleValuesSet sets an option to include/exclude rule-calculated values in\na view and any associated view extracts. A view extract is a TM1 view exported as an ASCII comma-delimited (.cma) file.\nViewExtractSkipRuleValuesSet is the equivalent of the Skip Rule Calculated Values option in the\nView Extract dialog box.\nNote: This function affects views as they exist on the server. The scope of this function is not\nrestricted to extracts generated from a view.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "VIEWEXTRACTSKIPZEROESSET",
            "annotation": "ViewExtractSkipZeroesSet(Cube, ViewName, Flag);",
            "contents": "VIEWEXTRACTSKIPZEROESSET(${1:sCube}, ${2:sView}, ${3:nFlag});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_viewextractskipzeroesset.html\">Documentation</a> ViewExtractSkipZeroesSet sets an option to include/exclude zero values in a view\nand any associated view extracts. A view extract is a TM1 view exported as an ASCII comma-delimited (.cma) file.\nViewExtractSkipZeroesSet is the equivalent of the Skip Zero/Blank Values option in the View\nExtract dialog box. \nNote: This function affects views as they exist on the server. The scope of this function is not\nrestricted to extracts generated from a view.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "VIEWMDXSET",
            "annotation": "ViewMDXSet(Cube, ViewName, MDX_expression);",
            "contents": "VIEWMDXSET(${1:sCube}, ${2:sView}, ${3:sMDX});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_viewmdxset.html\">Documentation</a> ViewMDXSet sets the MDX expression for an existing MDX view. \nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "VIEWMDXGET",
            "annotation": "ViewMDXGet(Cube, ViewName);",
            "contents": "VIEWMDXGET(${1:sCube}, ${2:sView});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_viewmdxget.html\">Documentation</a> ViewMDXGet retrieves the MDX expression for an existing MDX view.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "VIEWROWDIMENSIONSET",
            "annotation": "ViewRowDimensionSet(CubeName, ViewName, DimName, StackPosition);",
            "contents": "VIEWROWDIMENSIONSET(${1:sCube}, ${2:sView}, ${3:sDim}, ${4:nPos});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_viewrowdimensionset.html\">Documentation</a> ViewRowDimensionSet sets a row dimension for a TM1\nview.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "VIEWROWSUPPRESSZEROESSET",
            "annotation": "ViewRowSuppressZeroesSet(Cube, ViewName, Flag);",
            "contents": "VIEWROWSUPPRESSZEROESSET(${1:sCube}, ${2:sView}, ${3:nFlag});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_viewrowsuppresszeroesset.html\">Documentation</a> ViewRowSuppressZeroesSet suppresses or enables the display of rows containing only zero\nvalues in a TM1 cube view. \nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "VIEWSUBSETASSIGN",
            "annotation": "ViewSubsetAssign(Cube, ViewName, DimName, SubName);",
            "contents": "VIEWSUBSETASSIGN(${1:sCube}, ${2:sView}, ${3:sDim}, ${4:sSub});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_id_viewmanipulationturbointegratorfunctions_n728e8_4443viewsubsetassign.html\">Documentation</a> ViewSubsetAssign assigns a named subset to a cube view.\nNote: It is possible to create a temporary subset with the CreateSubset or CreateSubsetByMDX functions. If you attempt to use ViewSubsetAssign to assign a temporary\nsubset to a permanent view, the function will fail with error notification.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "VIEWSUPPRESSZEROESSET",
            "annotation": "ViewSuppressZeroesSet(Cube, ViewName, Flag);",
            "contents": "VIEWSUPPRESSZEROESSET(${1:sCube}, ${2:sView}, ${3:nFlag});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_id_viewmanipulationturbointegratorfunctions_n728e8_4492viewsuppresszeroesset.html\">Documentation</a> ViewSuppressZeroesSet suppresses or enables the display of all rows and columns\ncontaining only zero values in a TM1 cube view. \nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "VIEWTITLEDIMENSIONSET",
            "annotation": "ViewTitleDimensionSet(CubeName, ViewName, DimName);",
            "contents": "VIEWTITLEDIMENSIONSET(${1:sCube}, ${2:sView}, ${3:sDim});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_viewtitledimensionset.html\">Documentation</a> ViewTitleDimensionSet sets a title dimension for a TM1 view.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "VIEWTITLEELEMENTSET",
            "annotation": "ViewTitleElementSet(CubeName, ViewName, DimName, Index);",
            "contents": "VIEWTITLEELEMENTSET(${1:sCube}, ${2:sView}, ${3:sDim}, ${4:nIndex});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_viewtitleelementset.html\">Documentation</a> ViewTitleElementSet sets a title element for a TM1\nview. ViewTitleElementSet is used in conjunction with the ViewTitleDimensionSet\nfunction.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "VIEWZEROOUT",
            "annotation": "ViewZeroOut(Cube, ViewName);",
            "contents": "VIEWZEROOUT(${1:sCube}, ${2:sView});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_viewzeroout.html\">Documentation</a> ViewZeroOut sets all data points in a view to zero.\nThis function is valid in TM1 TurboIntegrator processes\nonly.\nNote: When using ViewZeroOut on a cube which has UNDEFVALS enabled, the values in the view will be set to zero, not the UNDEFVAL\nstate."
        },
        {
            "trigger": "ADDINFOCUBERESTRICTION",
            "annotation": "AddInfoCubeRestriction(STRINGCharactName, STRINGsign, STRINGcompOperator, STRINGlowValue, STRINGhighValue)",
            "contents": "ADDINFOCUBERESTRICTION(${1:STRING CharactName}, ${2:STRING sign}, ${3:STRING compOperator}, ${4:STRING lowValue}, ${5:STRING highValue})",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_id_miscellaneousturbointegratorfunctions_n72f55_4682addinfocuberestriction.html\">Documentation</a> AddInfoCubeRestriction filters InfoCube data as it is pulled into TM1. Use this function to restrict the values that are imported for a specified\ncharacteristic. This function must be placed in the Prolog. The function can be called multiple\ntimes to filter more than one characteristic in a single process.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "EXECUTEJAVAN",
            "annotation": "ExecuteJavaN('JavaTIClass', ['OptionalParameter1', 'OptionalParameter2', ...])",
            "contents": "EXECUTEJAVAN(${1:sClass}, ${2:sParam1}, ${3:sParam2}, ${4:...})",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_ti_func_executejavan.html\">Documentation</a> ExecuteJavaN executes a Java\u00e2\u0084\u00a2 TurboIntegrator\nprocess that returns a number. If you want to execute a Java\nTurboIntegrator process that returns a string, use ExecuteJavaS.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "EXECUTEJAVAS",
            "annotation": "ExecuteJavaS('JavaTIClass', ['OptionalParameter1', 'OptionalParameter2', ...])",
            "contents": "EXECUTEJAVAS(${1:sClass}, ${2:sParam1}, ${3:sParam2}, ${4:...})",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_ti_func_executejavas.html\">Documentation</a> ExecuteJavaS executes a Java\u00e2\u0084\u00a2 TurboIntegrator\nprocess that returns a string. If you want to execute a Java TurboIntegrator process that returns a\nnumber, use ExecuteJavaN.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "EXPAND",
            "annotation": "Expand(String);",
            "contents": "EXPAND(${1:sString});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_expand.html\">Documentation</a> Expand expands TurboIntegrator variable names, enclosed in % signs, to their values at\nrun time. A common use of the Expand function is to pass the value of TurboIntegrator variables to\nthe ODBCOutput function.\nIf the variable name represents a string variable, the entire variable expression must be\nenclosed on quotes. For example, \"%V1%\".\nIf Expand is fed with a numerical value, an implicit type conversion is performed and the\nnumerical value is converted into a string.\nThat string has a fixed minimum length of 10 characters. If the converted number is too small to\nfill 10 characters, it is padded with leading spaces. Only three leading decimal characters are\nconverted. For example, a numerical value of 0.123456789 is converted into the string \"0.123\".\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "FILEEXISTS",
            "annotation": "FileExists(File);",
            "contents": "FILEEXISTS(${1:sFile});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_fileexists.html\">Documentation</a> FileExists determines whether a specified file exists. The function returns 1 if the file\nexists, 0 if it does not. \nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "LOGOUTPUT",
            "annotation": "LogOutput('SeverityLevel', 'MessageString');",
            "contents": "LOGOUTPUT(${1:'SeverityLevel'}, ${2:'MessageString'});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_logoutput.html\">Documentation</a> LogOutput writes a message to the tm1server.log file when an error of a\nspecified severity level is encountered in a TurboIntegrator process. \nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "TM1USER",
            "annotation": "TM1User()",
            "contents": "TM1USER(${1:})",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_id_miscellaneousturbointegratorfunctions_n72f55_5120tm1user.html\">Documentation</a> TM1User returns a string giving the current TM1\nclient. When executed in a process that the user is running directly, it will return the user's TM1 client name. When executed in a chore that the user runs\ndirectly, it will also return the user's TM1 client name. \nIf run from a scheduled chore, it will return a name in the form R*<chore name>, for\nexample, R*UpdateRegionDimension.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "WILDCARDFILESEARCH",
            "annotation": "WildcardFileSearch(Pathname, PriorFilename);",
            "contents": "WILDCARDFILESEARCH(${1:sPath}, ${2:sFilePrior});",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_tifun_wildcardfilesearch.html\">Documentation</a> WildcardFileSearch lets you use wildcard characters to search for files in a specified\ndirectory.\nThe results of the WildCardFileSearch function may vary depending on the operating system in use.\nFiles in a Windows directory are sorted in alphabetical\norder while files in a UNIX directory are sorted in random\norder. Because the order of sorting varies between the operating systems, the identical\nWildCardFileSearch function executed against identical directories, one on Windows and one on UNIX, will yield\ndifferent results.\nThis function is valid in TM1 TurboIntegrator processes\nonly."
        },
        {
            "trigger": "DatasourceASCIIDecimalSeparator",
            "annotation": "DatasourceASCIIDecimalSeparator='Char';",
            "contents": "DatasourceASCIIDecimalSeparator = ${1:}",
            "kind": "variable",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_datasourceasciidecimalseparator.html\">Documentation</a> This TurboIntegrator local variable sets the decimal separator to be used in any\nconversion of a string to a number or a number to a string. If you set this variable you must also\nset the DatasourceASCIIThousandSeparator variable.\nThe character specified must be a standard ASCII printable character, with a decimal value\nbetween 33 and 127 inclusive."
        },
        {
            "trigger": "DatasourceASCIIDelimiter",
            "annotation": "DatasourceASCIIDelimiter='Char';",
            "contents": "DatasourceASCIIDelimiter = ${1:}",
            "kind": "variable",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_datasourceasciidelimiter.html\">Documentation</a> This TurboIntegrator local variable sets the ASCII character to be used as a field\ndelimiter when the DatasourceType is 'CHARACTERDELIMITED\".\nThe character specified must be a standard ASCII printable character, with a decimal value\nbetween 33 and 127 inclusive."
        },
        {
            "trigger": "DatasourceASCIIHeaderRecords",
            "annotation": "DatasourceASCIIHeaderRecords=N;",
            "contents": "DatasourceASCIIHeaderRecords = ${1:}",
            "kind": "variable",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_datasourceasciiheaderrecords.html\">Documentation</a> This TurboIntegrator local variable indicates the number of records to be skipped before\nprocessing the data source."
        },
        {
            "trigger": "DatasourceASCIIQuoteCharacter",
            "annotation": "DatasourceASCIIQuoteCharacter='Char';",
            "contents": "DatasourceASCIIQuoteCharacter = ${1:}",
            "kind": "variable",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_datasourceasciiquotecharacter.html\">Documentation</a> This TurboIntegrator local variable sets the ASCII character used to enclose the fields\nof the source file when DatasourceType is 'CHARACTERDELIMITED'.\nThe character specified must be a standard ASCII printable character, with a decimal value\nbetween 33 and 127 inclusive."
        },
        {
            "trigger": "DatasourceASCIIThousandSeparator",
            "annotation": "DatasourceASCIIThousandSeparator='Char';",
            "contents": "DatasourceASCIIThousandSeparator = ${1:}",
            "kind": "variable",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_datasourceasciithousandseparator.html\">Documentation</a> This TurboIntegrator local variable sets the thousands separator to be used in any\nconversion of a string to a number or a number to a string. \nIf you set this variable you must also set the DatasourceASCIIDecimalSeparator variable.\nThe character specified must be a standard ASCII printable character, with a decimal value\nbetween 33 and 127 inclusive."
        },
        {
            "trigger": "DatasourceCubeview",
            "annotation": "DatasourceCubeview='ViewName';",
            "contents": "DatasourceCubeview = ${1:}",
            "kind": "variable",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_datasourcecubeview.html\">Documentation</a> "
        },
        {
            "trigger": "DatasourceDimensionSubset",
            "annotation": "DatasourceDimensionSubset='SubsetName';",
            "contents": "DatasourceDimensionSubset = ${1:}",
            "kind": "variable",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_datasourcedimensionsubset.html\">Documentation</a> This TurboIntegrator local variable sets the subset to process if the DatasourceType is\n'SUBSET.'\nDatasourceNameForServer=Dimension name is also needed in conjunction with\nDATASOURCEDIMENSIONSUBSET so TM1 can identify where the subset\nis located."
        },
        {
            "trigger": "DatasourceNameForServer",
            "annotation": "DatasourceNameForServer='Name';",
            "contents": "DatasourceNameForServer = ${1:}",
            "kind": "variable",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_datasourcenameforserver.html\">Documentation</a> "
        },
        {
            "trigger": "DatasourceNameForClient",
            "annotation": "DatasourceNameForClient='Name';",
            "contents": "DatasourceNameForClient = ${1:}",
            "kind": "variable",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_datasourcenameforclient.html\">Documentation</a> "
        },
        {
            "trigger": "DatasourcePassword",
            "annotation": "DatasourcePassword='Password';",
            "contents": "DatasourcePassword = ${1:}",
            "kind": "variable",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_datasourcepassword.html\">Documentation</a> "
        },
        {
            "trigger": "DatasourceQuery",
            "annotation": "DatasourceQuery='Query';",
            "contents": "DatasourceQuery = ${1:}",
            "kind": "variable",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_datasourcequery.html\">Documentation</a> "
        },
        {
            "trigger": "DatasourceType",
            "annotation": "DataSourceType='Type';",
            "contents": "DatasourceType = ${1:}",
            "kind": "variable",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_datasourcetype.html\">Documentation</a> "
        },
        {
            "trigger": "DatasourceUsername",
            "annotation": "DatasourceUserName='Name';",
            "contents": "DatasourceUsername = ${1:}",
            "kind": "variable",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_datasourceusername.html\">Documentation</a> "
        },
        {
            "trigger": "MinorErrorLogMax",
            "annotation": "MinorErrorLogMax=N;",
            "contents": "MinorErrorLogMax = ${1:}",
            "kind": "variable",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_minorerrorlogmax.html\">Documentation</a> This TurboIntegrator local variable defines the number of minor errors that will be\nwritten to the TM1ProcessError.log file during process execution. If this variable is not defined in\nthe process, the default number of minor errors written to the log file is 1000."
        },
        {
            "trigger": "NValue",
            "annotation": "NValue",
            "contents": "NValue",
            "kind": "variable",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_nvalue.html\">Documentation</a> <a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_nvalue.html\">Documentation</a> When the DatasourceType is 'VIEW', this TurboIntegrator local variable determines the\nvalue of the current cell when Value_Is_String is 0. (That is, when the current cell is\nnumeric.)"
        },
        {
            "trigger": "OnMinorErrorDoItemSkip",
            "annotation": "OnMinorErrorDoItemSkip=N;",
            "contents": "OnMinorErrorDoItemSkip = ${1:}",
            "kind": "variable",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_onminorerrordoitemskip.html\">Documentation</a> This TurboIntegrator local variable instructs TurboIntegrator to skip to the next record\nwhen a minor error is encountered while processing a record.\nThis variable is useful in scenarios where a single bad field/value in a record causes multiple\nminor errors.\nFor example, if you have 100 CELLPUTN functions in a process and one of the fields in a given\nrecord is 'bad' or invalid, the minor error count is incremented by 100. (1 for each CELLPUTN\nfunction that encounters the error.) These 100 minor errors count towards the minor error limit\ndefined by MinorErrorLogMax. A TurboIntegrator process fails when it surpasses the number of minor\nerrors defined by MinorErrorLogMax.\nIf OnMinorErrorDoItemSkip=1; is included in the Prolog tab of the process, the process\nimmediately skips to the next record when a 'bad' or invalid field is encountered in a source\nrecord. Using the above example, this results in the minor error count being incremented by just 1,\nrather than 100."
        },
        {
            "trigger": "SValue",
            "annotation": "SValue",
            "contents": "SValue",
            "kind": "variable",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_svalue.html\">Documentation</a> <a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_svalue.html\">Documentation</a> When the DatasourceType is 'VIEW', this TurboIntegrator local variable determines the\nvalue of the current cell when Value_Is_String is not 0. (That is, when the current cell contains a\nstring.)"
        },
        {
            "trigger": "Value_Is_String",
            "annotation": "Value_Is_String",
            "contents": "Value_Is_String",
            "kind": "variable",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_value_is_string.html\">Documentation</a> <a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_value_is_string.html\">Documentation</a> When the DatasourceType is 'VIEW', this TurboIntegrator local variable determines whether\nthe current cell should be treated as a string or a numeric value."
        },
        {
            "trigger": "NUMERICGLOBALVARIABLE",
            "annotation": "",
            "contents": "NUMERICGLOBALVARIABLE()",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_numericglobalvariable.html\">Documentation</a> <a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_numericglobalvariable.html\">Documentation</a> Use this function to declare a numeric global variable."
        },
        {
            "trigger": "STRINGGLOBALVARIABLE",
            "annotation": "",
            "contents": "STRINGGLOBALVARIABLE()",
            "kind": "function",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_stringglobalvariable.html\">Documentation</a> <a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_stringglobalvariable.html\">Documentation</a> Use this function to define a string global variable."
        },
        {
            "trigger": "DataMinorErrorCount",
            "annotation": "DataMinorErrorCount",
            "contents": "DataMinorErrorCount",
            "kind": "variable",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_dataminorerrorcount.html\">Documentation</a> <a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_dataminorerrorcount.html\">Documentation</a> This TurboIntegrator global variable counts the minor errors that occur in the Data\nportion of a TurboIntegrator process. For each minor error encountered, the variable value is\nincremented by 1."
        },
        {
            "trigger": "MetadataMinorErrorCount",
            "annotation": "MetadataMinorErrorCount",
            "contents": "MetadataMinorErrorCount",
            "kind": "variable",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_metadataminorerrorcount.html\">Documentation</a> <a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_metadataminorerrorcount.html\">Documentation</a> This TurboIntegrator global variable counts the minor errors that occur in the Metadata\nportion of a TurboIntegrator process. For each minor error encountered, the variable value is\nincremented by 1."
        },
        {
            "trigger": "ProcessReturnCode",
            "annotation": "ProcessReturnCode",
            "contents": "ProcessReturnCode",
            "kind": "variable",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_processreturncode.html\">Documentation</a> <a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_processreturncode.html\">Documentation</a> This TurboIntegrator global variable stores the exit status of the most recently executed\nTurboIntegrator process."
        },
        {
            "trigger": "PrologMinorErrorCount",
            "annotation": "PrologMinorErrorCount",
            "contents": "PrologMinorErrorCount",
            "kind": "variable",
            "details": "<a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_prologminorerrorcount.html\">Documentation</a> <a href=\"https://www.ibm.com/docs/api/v1/content/SSD29G_2.0.0/com.ibm.swg.ba.cognos.tm1_ref.2.0.0.doc/r_tm1_ref_prologminorerrorcount.html\">Documentation</a> This TurboIntegrator global variable counts the minor errors that occur in the Prolog\nportion of a TurboIntegrator process. For each minor error encountered, the variable value is\nincremented by 1."
        }
    ]
}